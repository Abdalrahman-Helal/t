
TrafficLightSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c2e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012a  00800060  00001c2e  00001ca2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001218  00000000  00000000  00001dcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bdd  00000000  00000000  00002fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  00003bc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  00003d41  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  00003f14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  00005f23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  00007093  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00008094  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  00008234  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  000084f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008da3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e2       	ldi	r30, 0x2E	; 46
      68:	fc e1       	ldi	r31, 0x1C	; 28
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 38       	cpi	r26, 0x8A	; 138
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 63 06 	call	0xcc6	; 0xcc6 <main>
      7a:	0c 94 15 0e 	jmp	0x1c2a	; 0x1c2a <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 de 0d 	jmp	0x1bbc	; 0x1bbc <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 de 0d 	jmp	0x1bbc	; 0x1bbc <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 ee 0d 	jmp	0x1bdc	; 0x1bdc <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 0a 0e 	jmp	0x1c14	; 0x1c14 <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 e6 0d 	jmp	0x1bcc	; 0x1bcc <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 02 0e 	jmp	0x1c04	; 0x1c04 <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	e8 59       	subi	r30, 0x98	; 152
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <main>:


#define F_CPU 12000000UL

int main(void)
{
     cc6:	df 93       	push	r29
     cc8:	cf 93       	push	r28
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	e5 97       	sbiw	r28, 0x35	; 53
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	de bf       	out	0x3e, r29	; 62
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	cd bf       	out	0x3d, r28	; 61
	// Configure PORTA as Output for SSD1
	MDIO_voidSetPortDirection(DIO_PORTA,0xFF);
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	6f ef       	ldi	r22, 0xFF	; 255
     cde:	0e 94 43 0b 	call	0x1686	; 0x1686 <MDIO_voidSetPortDirection>

	// Configure PORTB as Output for SSD2
	MDIO_voidSetPortDirection(DIO_PORTB,0xFF);
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	6f ef       	ldi	r22, 0xFF	; 255
     ce6:	0e 94 43 0b 	call	0x1686	; 0x1686 <MDIO_voidSetPortDirection>

//	//Configure PORTC as Output for LEDs(Green,Yellow ,Red)
	MDIO_voidSetPortDirection(DIO_PORTC,0x07);
     cea:	82 e0       	ldi	r24, 0x02	; 2
     cec:	67 e0       	ldi	r22, 0x07	; 7
     cee:	0e 94 43 0b 	call	0x1686	; 0x1686 <MDIO_voidSetPortDirection>

	u8 SSD_Arr[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
     cf2:	ce 01       	movw	r24, r28
     cf4:	4f 96       	adiw	r24, 0x1f	; 31
     cf6:	9d a7       	std	Y+45, r25	; 0x2d
     cf8:	8c a7       	std	Y+44, r24	; 0x2c
     cfa:	eb e6       	ldi	r30, 0x6B	; 107
     cfc:	f1 e0       	ldi	r31, 0x01	; 1
     cfe:	ff a7       	std	Y+47, r31	; 0x2f
     d00:	ee a7       	std	Y+46, r30	; 0x2e
     d02:	fa e0       	ldi	r31, 0x0A	; 10
     d04:	f8 ab       	std	Y+48, r31	; 0x30
     d06:	ee a5       	ldd	r30, Y+46	; 0x2e
     d08:	ff a5       	ldd	r31, Y+47	; 0x2f
     d0a:	00 80       	ld	r0, Z
     d0c:	8e a5       	ldd	r24, Y+46	; 0x2e
     d0e:	9f a5       	ldd	r25, Y+47	; 0x2f
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	9f a7       	std	Y+47, r25	; 0x2f
     d14:	8e a7       	std	Y+46, r24	; 0x2e
     d16:	ec a5       	ldd	r30, Y+44	; 0x2c
     d18:	fd a5       	ldd	r31, Y+45	; 0x2d
     d1a:	00 82       	st	Z, r0
     d1c:	8c a5       	ldd	r24, Y+44	; 0x2c
     d1e:	9d a5       	ldd	r25, Y+45	; 0x2d
     d20:	01 96       	adiw	r24, 0x01	; 1
     d22:	9d a7       	std	Y+45, r25	; 0x2d
     d24:	8c a7       	std	Y+44, r24	; 0x2c
     d26:	98 a9       	ldd	r25, Y+48	; 0x30
     d28:	91 50       	subi	r25, 0x01	; 1
     d2a:	98 ab       	std	Y+48, r25	; 0x30
     d2c:	e8 a9       	ldd	r30, Y+48	; 0x30
     d2e:	ee 23       	and	r30, r30
     d30:	51 f7       	brne	.-44     	; 0xd06 <main+0x40>
	u8 LED_Arr[3]={GREEN,YELLOW ,RED};
     d32:	ce 01       	movw	r24, r28
     d34:	89 96       	adiw	r24, 0x29	; 41
     d36:	9a ab       	std	Y+50, r25	; 0x32
     d38:	89 ab       	std	Y+49, r24	; 0x31
     d3a:	e8 e6       	ldi	r30, 0x68	; 104
     d3c:	f1 e0       	ldi	r31, 0x01	; 1
     d3e:	fc ab       	std	Y+52, r31	; 0x34
     d40:	eb ab       	std	Y+51, r30	; 0x33
     d42:	f3 e0       	ldi	r31, 0x03	; 3
     d44:	fd ab       	std	Y+53, r31	; 0x35
     d46:	eb a9       	ldd	r30, Y+51	; 0x33
     d48:	fc a9       	ldd	r31, Y+52	; 0x34
     d4a:	00 80       	ld	r0, Z
     d4c:	8b a9       	ldd	r24, Y+51	; 0x33
     d4e:	9c a9       	ldd	r25, Y+52	; 0x34
     d50:	01 96       	adiw	r24, 0x01	; 1
     d52:	9c ab       	std	Y+52, r25	; 0x34
     d54:	8b ab       	std	Y+51, r24	; 0x33
     d56:	e9 a9       	ldd	r30, Y+49	; 0x31
     d58:	fa a9       	ldd	r31, Y+50	; 0x32
     d5a:	00 82       	st	Z, r0
     d5c:	89 a9       	ldd	r24, Y+49	; 0x31
     d5e:	9a a9       	ldd	r25, Y+50	; 0x32
     d60:	01 96       	adiw	r24, 0x01	; 1
     d62:	9a ab       	std	Y+50, r25	; 0x32
     d64:	89 ab       	std	Y+49, r24	; 0x31
     d66:	9d a9       	ldd	r25, Y+53	; 0x35
     d68:	91 50       	subi	r25, 0x01	; 1
     d6a:	9d ab       	std	Y+53, r25	; 0x35
     d6c:	ed a9       	ldd	r30, Y+53	; 0x35
     d6e:	ee 23       	and	r30, r30
     d70:	51 f7       	brne	.-44     	; 0xd46 <main+0x80>
	u8 i=3;
     d72:	83 e0       	ldi	r24, 0x03	; 3
     d74:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 j=0;
     d76:	1d 8e       	std	Y+29, r1	; 0x1d
	while(1)
	{
		for(j=0; j<3;j++)
     d78:	1d 8e       	std	Y+29, r1	; 0x1d
     d7a:	34 c1       	rjmp	.+616    	; 0xfe4 <main+0x31e>
		{
			HLED_voidTurnLEDOn(DIO_PORTC,LED_Arr[j]);
     d7c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d7e:	28 2f       	mov	r18, r24
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	ce 01       	movw	r24, r28
     d84:	89 96       	adiw	r24, 0x29	; 41
     d86:	fc 01       	movw	r30, r24
     d88:	e2 0f       	add	r30, r18
     d8a:	f3 1f       	adc	r31, r19
     d8c:	90 81       	ld	r25, Z
     d8e:	82 e0       	ldi	r24, 0x02	; 2
     d90:	69 2f       	mov	r22, r25
     d92:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <HLED_voidTurnLEDOn>

			if(j==0 || j==2)
     d96:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d98:	88 23       	and	r24, r24
     d9a:	21 f0       	breq	.+8      	; 0xda4 <main+0xde>
     d9c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d9e:	82 30       	cpi	r24, 0x02	; 2
     da0:	09 f0       	breq	.+2      	; 0xda4 <main+0xde>
     da2:	87 c0       	rjmp	.+270    	; 0xeb2 <main+0x1ec>
			{
				HSSD_voidDisplayNumber(DIO_PORTB,SSD_Arr[1]); // 1
     da4:	98 a1       	ldd	r25, Y+32	; 0x20
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	69 2f       	mov	r22, r25
     daa:	0e 94 1c 0c 	call	0x1838	; 0x1838 <HSSD_voidDisplayNumber>
				HSSD_voidDisplayNumber(DIO_PORTA,SSD_Arr[0]); //0
     dae:	9f 8d       	ldd	r25, Y+31	; 0x1f
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	69 2f       	mov	r22, r25
     db4:	0e 94 1c 0c 	call	0x1838	; 0x1838 <HSSD_voidDisplayNumber>
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	aa ef       	ldi	r26, 0xFA	; 250
     dbe:	b3 e4       	ldi	r27, 0x43	; 67
     dc0:	89 8f       	std	Y+25, r24	; 0x19
     dc2:	9a 8f       	std	Y+26, r25	; 0x1a
     dc4:	ab 8f       	std	Y+27, r26	; 0x1b
     dc6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     dc8:	69 8d       	ldd	r22, Y+25	; 0x19
     dca:	7a 8d       	ldd	r23, Y+26	; 0x1a
     dcc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     dce:	9c 8d       	ldd	r25, Y+28	; 0x1c
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	4a ef       	ldi	r20, 0xFA	; 250
     dd6:	54 e4       	ldi	r21, 0x44	; 68
     dd8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ddc:	dc 01       	movw	r26, r24
     dde:	cb 01       	movw	r24, r22
     de0:	8d 8b       	std	Y+21, r24	; 0x15
     de2:	9e 8b       	std	Y+22, r25	; 0x16
     de4:	af 8b       	std	Y+23, r26	; 0x17
     de6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     de8:	6d 89       	ldd	r22, Y+21	; 0x15
     dea:	7e 89       	ldd	r23, Y+22	; 0x16
     dec:	8f 89       	ldd	r24, Y+23	; 0x17
     dee:	98 8d       	ldd	r25, Y+24	; 0x18
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	40 e8       	ldi	r20, 0x80	; 128
     df6:	5f e3       	ldi	r21, 0x3F	; 63
     df8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     dfc:	88 23       	and	r24, r24
     dfe:	2c f4       	brge	.+10     	; 0xe0a <main+0x144>
		__ticks = 1;
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	9c 8b       	std	Y+20, r25	; 0x14
     e06:	8b 8b       	std	Y+19, r24	; 0x13
     e08:	3f c0       	rjmp	.+126    	; 0xe88 <main+0x1c2>
	else if (__tmp > 65535)
     e0a:	6d 89       	ldd	r22, Y+21	; 0x15
     e0c:	7e 89       	ldd	r23, Y+22	; 0x16
     e0e:	8f 89       	ldd	r24, Y+23	; 0x17
     e10:	98 8d       	ldd	r25, Y+24	; 0x18
     e12:	20 e0       	ldi	r18, 0x00	; 0
     e14:	3f ef       	ldi	r19, 0xFF	; 255
     e16:	4f e7       	ldi	r20, 0x7F	; 127
     e18:	57 e4       	ldi	r21, 0x47	; 71
     e1a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e1e:	18 16       	cp	r1, r24
     e20:	4c f5       	brge	.+82     	; 0xe74 <main+0x1ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e22:	69 8d       	ldd	r22, Y+25	; 0x19
     e24:	7a 8d       	ldd	r23, Y+26	; 0x1a
     e26:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e28:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e2a:	20 e0       	ldi	r18, 0x00	; 0
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	40 e2       	ldi	r20, 0x20	; 32
     e30:	51 e4       	ldi	r21, 0x41	; 65
     e32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e36:	dc 01       	movw	r26, r24
     e38:	cb 01       	movw	r24, r22
     e3a:	bc 01       	movw	r22, r24
     e3c:	cd 01       	movw	r24, r26
     e3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e42:	dc 01       	movw	r26, r24
     e44:	cb 01       	movw	r24, r22
     e46:	9c 8b       	std	Y+20, r25	; 0x14
     e48:	8b 8b       	std	Y+19, r24	; 0x13
     e4a:	0f c0       	rjmp	.+30     	; 0xe6a <main+0x1a4>
     e4c:	88 ec       	ldi	r24, 0xC8	; 200
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	9a 8b       	std	Y+18, r25	; 0x12
     e52:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e54:	89 89       	ldd	r24, Y+17	; 0x11
     e56:	9a 89       	ldd	r25, Y+18	; 0x12
     e58:	01 97       	sbiw	r24, 0x01	; 1
     e5a:	f1 f7       	brne	.-4      	; 0xe58 <main+0x192>
     e5c:	9a 8b       	std	Y+18, r25	; 0x12
     e5e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e60:	8b 89       	ldd	r24, Y+19	; 0x13
     e62:	9c 89       	ldd	r25, Y+20	; 0x14
     e64:	01 97       	sbiw	r24, 0x01	; 1
     e66:	9c 8b       	std	Y+20, r25	; 0x14
     e68:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e6a:	8b 89       	ldd	r24, Y+19	; 0x13
     e6c:	9c 89       	ldd	r25, Y+20	; 0x14
     e6e:	00 97       	sbiw	r24, 0x00	; 0
     e70:	69 f7       	brne	.-38     	; 0xe4c <main+0x186>
     e72:	14 c0       	rjmp	.+40     	; 0xe9c <main+0x1d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e74:	6d 89       	ldd	r22, Y+21	; 0x15
     e76:	7e 89       	ldd	r23, Y+22	; 0x16
     e78:	8f 89       	ldd	r24, Y+23	; 0x17
     e7a:	98 8d       	ldd	r25, Y+24	; 0x18
     e7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e80:	dc 01       	movw	r26, r24
     e82:	cb 01       	movw	r24, r22
     e84:	9c 8b       	std	Y+20, r25	; 0x14
     e86:	8b 8b       	std	Y+19, r24	; 0x13
     e88:	8b 89       	ldd	r24, Y+19	; 0x13
     e8a:	9c 89       	ldd	r25, Y+20	; 0x14
     e8c:	98 8b       	std	Y+16, r25	; 0x10
     e8e:	8f 87       	std	Y+15, r24	; 0x0f
     e90:	8f 85       	ldd	r24, Y+15	; 0x0f
     e92:	98 89       	ldd	r25, Y+16	; 0x10
     e94:	01 97       	sbiw	r24, 0x01	; 1
     e96:	f1 f7       	brne	.-4      	; 0xe94 <main+0x1ce>
     e98:	98 8b       	std	Y+16, r25	; 0x10
     e9a:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(500);
//
				HSSD_voidDisplayNumber(DIO_PORTB,SSD_Arr[0]); // 0
     e9c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	69 2f       	mov	r22, r25
     ea2:	0e 94 1c 0c 	call	0x1838	; 0x1838 <HSSD_voidDisplayNumber>
				HSSD_voidDisplayNumberDescending(DIO_PORTA,500);
     ea6:	80 e0       	ldi	r24, 0x00	; 0
     ea8:	64 ef       	ldi	r22, 0xF4	; 244
     eaa:	71 e0       	ldi	r23, 0x01	; 1
     eac:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <HSSD_voidDisplayNumberDescending>
     eb0:	89 c0       	rjmp	.+274    	; 0xfc4 <main+0x2fe>
//				_delay_ms(1000);
			}

			else
			{
				for(i=3; i>0;i--)
     eb2:	83 e0       	ldi	r24, 0x03	; 3
     eb4:	8e 8f       	std	Y+30, r24	; 0x1e
     eb6:	82 c0       	rjmp	.+260    	; 0xfbc <main+0x2f6>
				{
					MDIO_voidSetPortValue(DIO_PORTA,(SSD_Arr[i]));
     eb8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     eba:	28 2f       	mov	r18, r24
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	ce 01       	movw	r24, r28
     ec0:	4f 96       	adiw	r24, 0x1f	; 31
     ec2:	fc 01       	movw	r30, r24
     ec4:	e2 0f       	add	r30, r18
     ec6:	f3 1f       	adc	r31, r19
     ec8:	90 81       	ld	r25, Z
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	69 2f       	mov	r22, r25
     ece:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	aa ef       	ldi	r26, 0xFA	; 250
     ed8:	b3 e4       	ldi	r27, 0x43	; 67
     eda:	8b 87       	std	Y+11, r24	; 0x0b
     edc:	9c 87       	std	Y+12, r25	; 0x0c
     ede:	ad 87       	std	Y+13, r26	; 0x0d
     ee0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ee2:	6b 85       	ldd	r22, Y+11	; 0x0b
     ee4:	7c 85       	ldd	r23, Y+12	; 0x0c
     ee6:	8d 85       	ldd	r24, Y+13	; 0x0d
     ee8:	9e 85       	ldd	r25, Y+14	; 0x0e
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	4a ef       	ldi	r20, 0xFA	; 250
     ef0:	54 e4       	ldi	r21, 0x44	; 68
     ef2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ef6:	dc 01       	movw	r26, r24
     ef8:	cb 01       	movw	r24, r22
     efa:	8f 83       	std	Y+7, r24	; 0x07
     efc:	98 87       	std	Y+8, r25	; 0x08
     efe:	a9 87       	std	Y+9, r26	; 0x09
     f00:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     f02:	6f 81       	ldd	r22, Y+7	; 0x07
     f04:	78 85       	ldd	r23, Y+8	; 0x08
     f06:	89 85       	ldd	r24, Y+9	; 0x09
     f08:	9a 85       	ldd	r25, Y+10	; 0x0a
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	40 e8       	ldi	r20, 0x80	; 128
     f10:	5f e3       	ldi	r21, 0x3F	; 63
     f12:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f16:	88 23       	and	r24, r24
     f18:	2c f4       	brge	.+10     	; 0xf24 <main+0x25e>
		__ticks = 1;
     f1a:	81 e0       	ldi	r24, 0x01	; 1
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	9e 83       	std	Y+6, r25	; 0x06
     f20:	8d 83       	std	Y+5, r24	; 0x05
     f22:	3f c0       	rjmp	.+126    	; 0xfa2 <main+0x2dc>
	else if (__tmp > 65535)
     f24:	6f 81       	ldd	r22, Y+7	; 0x07
     f26:	78 85       	ldd	r23, Y+8	; 0x08
     f28:	89 85       	ldd	r24, Y+9	; 0x09
     f2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	3f ef       	ldi	r19, 0xFF	; 255
     f30:	4f e7       	ldi	r20, 0x7F	; 127
     f32:	57 e4       	ldi	r21, 0x47	; 71
     f34:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f38:	18 16       	cp	r1, r24
     f3a:	4c f5       	brge	.+82     	; 0xf8e <main+0x2c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f3c:	6b 85       	ldd	r22, Y+11	; 0x0b
     f3e:	7c 85       	ldd	r23, Y+12	; 0x0c
     f40:	8d 85       	ldd	r24, Y+13	; 0x0d
     f42:	9e 85       	ldd	r25, Y+14	; 0x0e
     f44:	20 e0       	ldi	r18, 0x00	; 0
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	40 e2       	ldi	r20, 0x20	; 32
     f4a:	51 e4       	ldi	r21, 0x41	; 65
     f4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f50:	dc 01       	movw	r26, r24
     f52:	cb 01       	movw	r24, r22
     f54:	bc 01       	movw	r22, r24
     f56:	cd 01       	movw	r24, r26
     f58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f5c:	dc 01       	movw	r26, r24
     f5e:	cb 01       	movw	r24, r22
     f60:	9e 83       	std	Y+6, r25	; 0x06
     f62:	8d 83       	std	Y+5, r24	; 0x05
     f64:	0f c0       	rjmp	.+30     	; 0xf84 <main+0x2be>
     f66:	88 ec       	ldi	r24, 0xC8	; 200
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	9c 83       	std	Y+4, r25	; 0x04
     f6c:	8b 83       	std	Y+3, r24	; 0x03
     f6e:	8b 81       	ldd	r24, Y+3	; 0x03
     f70:	9c 81       	ldd	r25, Y+4	; 0x04
     f72:	01 97       	sbiw	r24, 0x01	; 1
     f74:	f1 f7       	brne	.-4      	; 0xf72 <main+0x2ac>
     f76:	9c 83       	std	Y+4, r25	; 0x04
     f78:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f7a:	8d 81       	ldd	r24, Y+5	; 0x05
     f7c:	9e 81       	ldd	r25, Y+6	; 0x06
     f7e:	01 97       	sbiw	r24, 0x01	; 1
     f80:	9e 83       	std	Y+6, r25	; 0x06
     f82:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f84:	8d 81       	ldd	r24, Y+5	; 0x05
     f86:	9e 81       	ldd	r25, Y+6	; 0x06
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	69 f7       	brne	.-38     	; 0xf66 <main+0x2a0>
     f8c:	14 c0       	rjmp	.+40     	; 0xfb6 <main+0x2f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f8e:	6f 81       	ldd	r22, Y+7	; 0x07
     f90:	78 85       	ldd	r23, Y+8	; 0x08
     f92:	89 85       	ldd	r24, Y+9	; 0x09
     f94:	9a 85       	ldd	r25, Y+10	; 0x0a
     f96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f9a:	dc 01       	movw	r26, r24
     f9c:	cb 01       	movw	r24, r22
     f9e:	9e 83       	std	Y+6, r25	; 0x06
     fa0:	8d 83       	std	Y+5, r24	; 0x05
     fa2:	8d 81       	ldd	r24, Y+5	; 0x05
     fa4:	9e 81       	ldd	r25, Y+6	; 0x06
     fa6:	9a 83       	std	Y+2, r25	; 0x02
     fa8:	89 83       	std	Y+1, r24	; 0x01
     faa:	89 81       	ldd	r24, Y+1	; 0x01
     fac:	9a 81       	ldd	r25, Y+2	; 0x02
     fae:	01 97       	sbiw	r24, 0x01	; 1
     fb0:	f1 f7       	brne	.-4      	; 0xfae <main+0x2e8>
     fb2:	9a 83       	std	Y+2, r25	; 0x02
     fb4:	89 83       	std	Y+1, r24	; 0x01
//				_delay_ms(1000);
			}

			else
			{
				for(i=3; i>0;i--)
     fb6:	8e 8d       	ldd	r24, Y+30	; 0x1e
     fb8:	81 50       	subi	r24, 0x01	; 1
     fba:	8e 8f       	std	Y+30, r24	; 0x1e
     fbc:	8e 8d       	ldd	r24, Y+30	; 0x1e
     fbe:	88 23       	and	r24, r24
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <main+0x2fe>
     fc2:	7a cf       	rjmp	.-268    	; 0xeb8 <main+0x1f2>
				{
					MDIO_voidSetPortValue(DIO_PORTA,(SSD_Arr[i]));
					_delay_ms(500);
				}
			}
			HLED_voidTurnLEDOff(DIO_PORTC,LED_Arr[j]);
     fc4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fc6:	28 2f       	mov	r18, r24
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	ce 01       	movw	r24, r28
     fcc:	89 96       	adiw	r24, 0x29	; 41
     fce:	fc 01       	movw	r30, r24
     fd0:	e2 0f       	add	r30, r18
     fd2:	f3 1f       	adc	r31, r19
     fd4:	90 81       	ld	r25, Z
     fd6:	82 e0       	ldi	r24, 0x02	; 2
     fd8:	69 2f       	mov	r22, r25
     fda:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <HLED_voidTurnLEDOff>
	u8 LED_Arr[3]={GREEN,YELLOW ,RED};
	u8 i=3;
	u8 j=0;
	while(1)
	{
		for(j=0; j<3;j++)
     fde:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fe0:	8f 5f       	subi	r24, 0xFF	; 255
     fe2:	8d 8f       	std	Y+29, r24	; 0x1d
     fe4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     fe6:	83 30       	cpi	r24, 0x03	; 3
     fe8:	08 f4       	brcc	.+2      	; 0xfec <main+0x326>
     fea:	c8 ce       	rjmp	.-624    	; 0xd7c <main+0xb6>
     fec:	c5 ce       	rjmp	.-630    	; 0xd78 <main+0xb2>

00000fee <MDIO_voidSetPinDirection>:


// MDIO_voidSetPinDirection(DIO_PORTA, PIN0, DIO_OUTPUT);

void MDIO_voidSetPinDirection(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_pinDirection)
{
     fee:	df 93       	push	r29
     ff0:	cf 93       	push	r28
     ff2:	cd b7       	in	r28, 0x3d	; 61
     ff4:	de b7       	in	r29, 0x3e	; 62
     ff6:	2d 97       	sbiw	r28, 0x0d	; 13
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	89 83       	std	Y+1, r24	; 0x01
    1004:	6a 83       	std	Y+2, r22	; 0x02
    1006:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinDirection <= DIO_OUTPUT) )
    1008:	89 81       	ldd	r24, Y+1	; 0x01
    100a:	84 30       	cpi	r24, 0x04	; 4
    100c:	08 f0       	brcs	.+2      	; 0x1010 <MDIO_voidSetPinDirection+0x22>
    100e:	09 c1       	rjmp	.+530    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
    1010:	8a 81       	ldd	r24, Y+2	; 0x02
    1012:	88 30       	cpi	r24, 0x08	; 8
    1014:	08 f0       	brcs	.+2      	; 0x1018 <MDIO_voidSetPinDirection+0x2a>
    1016:	05 c1       	rjmp	.+522    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
    1018:	8b 81       	ldd	r24, Y+3	; 0x03
    101a:	82 30       	cpi	r24, 0x02	; 2
    101c:	08 f0       	brcs	.+2      	; 0x1020 <MDIO_voidSetPinDirection+0x32>
    101e:	01 c1       	rjmp	.+514    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
	{
		switch (A_portID)
    1020:	89 81       	ldd	r24, Y+1	; 0x01
    1022:	28 2f       	mov	r18, r24
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	3d 87       	std	Y+13, r19	; 0x0d
    1028:	2c 87       	std	Y+12, r18	; 0x0c
    102a:	8c 85       	ldd	r24, Y+12	; 0x0c
    102c:	9d 85       	ldd	r25, Y+13	; 0x0d
    102e:	81 30       	cpi	r24, 0x01	; 1
    1030:	91 05       	cpc	r25, r1
    1032:	09 f4       	brne	.+2      	; 0x1036 <MDIO_voidSetPinDirection+0x48>
    1034:	4f c0       	rjmp	.+158    	; 0x10d4 <MDIO_voidSetPinDirection+0xe6>
    1036:	2c 85       	ldd	r18, Y+12	; 0x0c
    1038:	3d 85       	ldd	r19, Y+13	; 0x0d
    103a:	22 30       	cpi	r18, 0x02	; 2
    103c:	31 05       	cpc	r19, r1
    103e:	2c f4       	brge	.+10     	; 0x104a <MDIO_voidSetPinDirection+0x5c>
    1040:	8c 85       	ldd	r24, Y+12	; 0x0c
    1042:	9d 85       	ldd	r25, Y+13	; 0x0d
    1044:	00 97       	sbiw	r24, 0x00	; 0
    1046:	71 f0       	breq	.+28     	; 0x1064 <MDIO_voidSetPinDirection+0x76>
    1048:	ec c0       	rjmp	.+472    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
    104a:	2c 85       	ldd	r18, Y+12	; 0x0c
    104c:	3d 85       	ldd	r19, Y+13	; 0x0d
    104e:	22 30       	cpi	r18, 0x02	; 2
    1050:	31 05       	cpc	r19, r1
    1052:	09 f4       	brne	.+2      	; 0x1056 <MDIO_voidSetPinDirection+0x68>
    1054:	77 c0       	rjmp	.+238    	; 0x1144 <MDIO_voidSetPinDirection+0x156>
    1056:	8c 85       	ldd	r24, Y+12	; 0x0c
    1058:	9d 85       	ldd	r25, Y+13	; 0x0d
    105a:	83 30       	cpi	r24, 0x03	; 3
    105c:	91 05       	cpc	r25, r1
    105e:	09 f4       	brne	.+2      	; 0x1062 <MDIO_voidSetPinDirection+0x74>
    1060:	a9 c0       	rjmp	.+338    	; 0x11b4 <MDIO_voidSetPinDirection+0x1c6>
    1062:	df c0       	rjmp	.+446    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
		{
		case DIO_PORTA:
			switch (A_pinDirection)
    1064:	8b 81       	ldd	r24, Y+3	; 0x03
    1066:	28 2f       	mov	r18, r24
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	3b 87       	std	Y+11, r19	; 0x0b
    106c:	2a 87       	std	Y+10, r18	; 0x0a
    106e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1070:	9b 85       	ldd	r25, Y+11	; 0x0b
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	31 f0       	breq	.+12     	; 0x1082 <MDIO_voidSetPinDirection+0x94>
    1076:	2a 85       	ldd	r18, Y+10	; 0x0a
    1078:	3b 85       	ldd	r19, Y+11	; 0x0b
    107a:	21 30       	cpi	r18, 0x01	; 1
    107c:	31 05       	cpc	r19, r1
    107e:	b1 f0       	breq	.+44     	; 0x10ac <MDIO_voidSetPinDirection+0xbe>
    1080:	d0 c0       	rjmp	.+416    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
    1082:	aa e3       	ldi	r26, 0x3A	; 58
    1084:	b0 e0       	ldi	r27, 0x00	; 0
    1086:	ea e3       	ldi	r30, 0x3A	; 58
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	80 81       	ld	r24, Z
    108c:	48 2f       	mov	r20, r24
    108e:	8a 81       	ldd	r24, Y+2	; 0x02
    1090:	28 2f       	mov	r18, r24
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	02 2e       	mov	r0, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <MDIO_voidSetPinDirection+0xb2>
    109c:	88 0f       	add	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	0a 94       	dec	r0
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <MDIO_voidSetPinDirection+0xae>
    10a4:	80 95       	com	r24
    10a6:	84 23       	and	r24, r20
    10a8:	8c 93       	st	X, r24
    10aa:	bb c0       	rjmp	.+374    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
    10ac:	aa e3       	ldi	r26, 0x3A	; 58
    10ae:	b0 e0       	ldi	r27, 0x00	; 0
    10b0:	ea e3       	ldi	r30, 0x3A	; 58
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	80 81       	ld	r24, Z
    10b6:	48 2f       	mov	r20, r24
    10b8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ba:	28 2f       	mov	r18, r24
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	02 2e       	mov	r0, r18
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <MDIO_voidSetPinDirection+0xdc>
    10c6:	88 0f       	add	r24, r24
    10c8:	99 1f       	adc	r25, r25
    10ca:	0a 94       	dec	r0
    10cc:	e2 f7       	brpl	.-8      	; 0x10c6 <MDIO_voidSetPinDirection+0xd8>
    10ce:	84 2b       	or	r24, r20
    10d0:	8c 93       	st	X, r24
    10d2:	a7 c0       	rjmp	.+334    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinDirection)
    10d4:	8b 81       	ldd	r24, Y+3	; 0x03
    10d6:	28 2f       	mov	r18, r24
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	39 87       	std	Y+9, r19	; 0x09
    10dc:	28 87       	std	Y+8, r18	; 0x08
    10de:	88 85       	ldd	r24, Y+8	; 0x08
    10e0:	99 85       	ldd	r25, Y+9	; 0x09
    10e2:	00 97       	sbiw	r24, 0x00	; 0
    10e4:	31 f0       	breq	.+12     	; 0x10f2 <MDIO_voidSetPinDirection+0x104>
    10e6:	28 85       	ldd	r18, Y+8	; 0x08
    10e8:	39 85       	ldd	r19, Y+9	; 0x09
    10ea:	21 30       	cpi	r18, 0x01	; 1
    10ec:	31 05       	cpc	r19, r1
    10ee:	b1 f0       	breq	.+44     	; 0x111c <MDIO_voidSetPinDirection+0x12e>
    10f0:	98 c0       	rjmp	.+304    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
    10f2:	a7 e3       	ldi	r26, 0x37	; 55
    10f4:	b0 e0       	ldi	r27, 0x00	; 0
    10f6:	e7 e3       	ldi	r30, 0x37	; 55
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	80 81       	ld	r24, Z
    10fc:	48 2f       	mov	r20, r24
    10fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1100:	28 2f       	mov	r18, r24
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	02 2e       	mov	r0, r18
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <MDIO_voidSetPinDirection+0x122>
    110c:	88 0f       	add	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	0a 94       	dec	r0
    1112:	e2 f7       	brpl	.-8      	; 0x110c <MDIO_voidSetPinDirection+0x11e>
    1114:	80 95       	com	r24
    1116:	84 23       	and	r24, r20
    1118:	8c 93       	st	X, r24
    111a:	83 c0       	rjmp	.+262    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
    111c:	a7 e3       	ldi	r26, 0x37	; 55
    111e:	b0 e0       	ldi	r27, 0x00	; 0
    1120:	e7 e3       	ldi	r30, 0x37	; 55
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	48 2f       	mov	r20, r24
    1128:	8a 81       	ldd	r24, Y+2	; 0x02
    112a:	28 2f       	mov	r18, r24
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	02 2e       	mov	r0, r18
    1134:	02 c0       	rjmp	.+4      	; 0x113a <MDIO_voidSetPinDirection+0x14c>
    1136:	88 0f       	add	r24, r24
    1138:	99 1f       	adc	r25, r25
    113a:	0a 94       	dec	r0
    113c:	e2 f7       	brpl	.-8      	; 0x1136 <MDIO_voidSetPinDirection+0x148>
    113e:	84 2b       	or	r24, r20
    1140:	8c 93       	st	X, r24
    1142:	6f c0       	rjmp	.+222    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinDirection)
    1144:	8b 81       	ldd	r24, Y+3	; 0x03
    1146:	28 2f       	mov	r18, r24
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	3f 83       	std	Y+7, r19	; 0x07
    114c:	2e 83       	std	Y+6, r18	; 0x06
    114e:	8e 81       	ldd	r24, Y+6	; 0x06
    1150:	9f 81       	ldd	r25, Y+7	; 0x07
    1152:	00 97       	sbiw	r24, 0x00	; 0
    1154:	31 f0       	breq	.+12     	; 0x1162 <MDIO_voidSetPinDirection+0x174>
    1156:	2e 81       	ldd	r18, Y+6	; 0x06
    1158:	3f 81       	ldd	r19, Y+7	; 0x07
    115a:	21 30       	cpi	r18, 0x01	; 1
    115c:	31 05       	cpc	r19, r1
    115e:	b1 f0       	breq	.+44     	; 0x118c <MDIO_voidSetPinDirection+0x19e>
    1160:	60 c0       	rjmp	.+192    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
    1162:	a4 e3       	ldi	r26, 0x34	; 52
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	e4 e3       	ldi	r30, 0x34	; 52
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	48 2f       	mov	r20, r24
    116e:	8a 81       	ldd	r24, Y+2	; 0x02
    1170:	28 2f       	mov	r18, r24
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	02 2e       	mov	r0, r18
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <MDIO_voidSetPinDirection+0x192>
    117c:	88 0f       	add	r24, r24
    117e:	99 1f       	adc	r25, r25
    1180:	0a 94       	dec	r0
    1182:	e2 f7       	brpl	.-8      	; 0x117c <MDIO_voidSetPinDirection+0x18e>
    1184:	80 95       	com	r24
    1186:	84 23       	and	r24, r20
    1188:	8c 93       	st	X, r24
    118a:	4b c0       	rjmp	.+150    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
    118c:	a4 e3       	ldi	r26, 0x34	; 52
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	e4 e3       	ldi	r30, 0x34	; 52
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	80 81       	ld	r24, Z
    1196:	48 2f       	mov	r20, r24
    1198:	8a 81       	ldd	r24, Y+2	; 0x02
    119a:	28 2f       	mov	r18, r24
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	02 2e       	mov	r0, r18
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <MDIO_voidSetPinDirection+0x1bc>
    11a6:	88 0f       	add	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	0a 94       	dec	r0
    11ac:	e2 f7       	brpl	.-8      	; 0x11a6 <MDIO_voidSetPinDirection+0x1b8>
    11ae:	84 2b       	or	r24, r20
    11b0:	8c 93       	st	X, r24
    11b2:	37 c0       	rjmp	.+110    	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinDirection)
    11b4:	8b 81       	ldd	r24, Y+3	; 0x03
    11b6:	28 2f       	mov	r18, r24
    11b8:	30 e0       	ldi	r19, 0x00	; 0
    11ba:	3d 83       	std	Y+5, r19	; 0x05
    11bc:	2c 83       	std	Y+4, r18	; 0x04
    11be:	8c 81       	ldd	r24, Y+4	; 0x04
    11c0:	9d 81       	ldd	r25, Y+5	; 0x05
    11c2:	00 97       	sbiw	r24, 0x00	; 0
    11c4:	31 f0       	breq	.+12     	; 0x11d2 <MDIO_voidSetPinDirection+0x1e4>
    11c6:	2c 81       	ldd	r18, Y+4	; 0x04
    11c8:	3d 81       	ldd	r19, Y+5	; 0x05
    11ca:	21 30       	cpi	r18, 0x01	; 1
    11cc:	31 05       	cpc	r19, r1
    11ce:	b1 f0       	breq	.+44     	; 0x11fc <MDIO_voidSetPinDirection+0x20e>
    11d0:	28 c0       	rjmp	.+80     	; 0x1222 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
    11d2:	a1 e3       	ldi	r26, 0x31	; 49
    11d4:	b0 e0       	ldi	r27, 0x00	; 0
    11d6:	e1 e3       	ldi	r30, 0x31	; 49
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	80 81       	ld	r24, Z
    11dc:	48 2f       	mov	r20, r24
    11de:	8a 81       	ldd	r24, Y+2	; 0x02
    11e0:	28 2f       	mov	r18, r24
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	81 e0       	ldi	r24, 0x01	; 1
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	02 2e       	mov	r0, r18
    11ea:	02 c0       	rjmp	.+4      	; 0x11f0 <MDIO_voidSetPinDirection+0x202>
    11ec:	88 0f       	add	r24, r24
    11ee:	99 1f       	adc	r25, r25
    11f0:	0a 94       	dec	r0
    11f2:	e2 f7       	brpl	.-8      	; 0x11ec <MDIO_voidSetPinDirection+0x1fe>
    11f4:	80 95       	com	r24
    11f6:	84 23       	and	r24, r20
    11f8:	8c 93       	st	X, r24
    11fa:	13 c0       	rjmp	.+38     	; 0x1222 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
    11fc:	a1 e3       	ldi	r26, 0x31	; 49
    11fe:	b0 e0       	ldi	r27, 0x00	; 0
    1200:	e1 e3       	ldi	r30, 0x31	; 49
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	80 81       	ld	r24, Z
    1206:	48 2f       	mov	r20, r24
    1208:	8a 81       	ldd	r24, Y+2	; 0x02
    120a:	28 2f       	mov	r18, r24
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	02 2e       	mov	r0, r18
    1214:	02 c0       	rjmp	.+4      	; 0x121a <MDIO_voidSetPinDirection+0x22c>
    1216:	88 0f       	add	r24, r24
    1218:	99 1f       	adc	r25, r25
    121a:	0a 94       	dec	r0
    121c:	e2 f7       	brpl	.-8      	; 0x1216 <MDIO_voidSetPinDirection+0x228>
    121e:	84 2b       	or	r24, r20
    1220:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    1222:	2d 96       	adiw	r28, 0x0d	; 13
    1224:	0f b6       	in	r0, 0x3f	; 63
    1226:	f8 94       	cli
    1228:	de bf       	out	0x3e, r29	; 62
    122a:	0f be       	out	0x3f, r0	; 63
    122c:	cd bf       	out	0x3d, r28	; 61
    122e:	cf 91       	pop	r28
    1230:	df 91       	pop	r29
    1232:	08 95       	ret

00001234 <MDIO_voidSetPinValue>:


void MDIO_voidSetPinValue(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_pinValue)
{
    1234:	df 93       	push	r29
    1236:	cf 93       	push	r28
    1238:	cd b7       	in	r28, 0x3d	; 61
    123a:	de b7       	in	r29, 0x3e	; 62
    123c:	2d 97       	sbiw	r28, 0x0d	; 13
    123e:	0f b6       	in	r0, 0x3f	; 63
    1240:	f8 94       	cli
    1242:	de bf       	out	0x3e, r29	; 62
    1244:	0f be       	out	0x3f, r0	; 63
    1246:	cd bf       	out	0x3d, r28	; 61
    1248:	89 83       	std	Y+1, r24	; 0x01
    124a:	6a 83       	std	Y+2, r22	; 0x02
    124c:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinValue <= DIO_SET) )
    124e:	89 81       	ldd	r24, Y+1	; 0x01
    1250:	84 30       	cpi	r24, 0x04	; 4
    1252:	08 f0       	brcs	.+2      	; 0x1256 <MDIO_voidSetPinValue+0x22>
    1254:	09 c1       	rjmp	.+530    	; 0x1468 <MDIO_voidSetPinValue+0x234>
    1256:	8a 81       	ldd	r24, Y+2	; 0x02
    1258:	88 30       	cpi	r24, 0x08	; 8
    125a:	08 f0       	brcs	.+2      	; 0x125e <MDIO_voidSetPinValue+0x2a>
    125c:	05 c1       	rjmp	.+522    	; 0x1468 <MDIO_voidSetPinValue+0x234>
    125e:	8b 81       	ldd	r24, Y+3	; 0x03
    1260:	82 30       	cpi	r24, 0x02	; 2
    1262:	08 f0       	brcs	.+2      	; 0x1266 <MDIO_voidSetPinValue+0x32>
    1264:	01 c1       	rjmp	.+514    	; 0x1468 <MDIO_voidSetPinValue+0x234>
	{
		switch (A_portID)
    1266:	89 81       	ldd	r24, Y+1	; 0x01
    1268:	28 2f       	mov	r18, r24
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	3d 87       	std	Y+13, r19	; 0x0d
    126e:	2c 87       	std	Y+12, r18	; 0x0c
    1270:	8c 85       	ldd	r24, Y+12	; 0x0c
    1272:	9d 85       	ldd	r25, Y+13	; 0x0d
    1274:	81 30       	cpi	r24, 0x01	; 1
    1276:	91 05       	cpc	r25, r1
    1278:	09 f4       	brne	.+2      	; 0x127c <MDIO_voidSetPinValue+0x48>
    127a:	4f c0       	rjmp	.+158    	; 0x131a <MDIO_voidSetPinValue+0xe6>
    127c:	2c 85       	ldd	r18, Y+12	; 0x0c
    127e:	3d 85       	ldd	r19, Y+13	; 0x0d
    1280:	22 30       	cpi	r18, 0x02	; 2
    1282:	31 05       	cpc	r19, r1
    1284:	2c f4       	brge	.+10     	; 0x1290 <MDIO_voidSetPinValue+0x5c>
    1286:	8c 85       	ldd	r24, Y+12	; 0x0c
    1288:	9d 85       	ldd	r25, Y+13	; 0x0d
    128a:	00 97       	sbiw	r24, 0x00	; 0
    128c:	71 f0       	breq	.+28     	; 0x12aa <MDIO_voidSetPinValue+0x76>
    128e:	ec c0       	rjmp	.+472    	; 0x1468 <MDIO_voidSetPinValue+0x234>
    1290:	2c 85       	ldd	r18, Y+12	; 0x0c
    1292:	3d 85       	ldd	r19, Y+13	; 0x0d
    1294:	22 30       	cpi	r18, 0x02	; 2
    1296:	31 05       	cpc	r19, r1
    1298:	09 f4       	brne	.+2      	; 0x129c <MDIO_voidSetPinValue+0x68>
    129a:	77 c0       	rjmp	.+238    	; 0x138a <MDIO_voidSetPinValue+0x156>
    129c:	8c 85       	ldd	r24, Y+12	; 0x0c
    129e:	9d 85       	ldd	r25, Y+13	; 0x0d
    12a0:	83 30       	cpi	r24, 0x03	; 3
    12a2:	91 05       	cpc	r25, r1
    12a4:	09 f4       	brne	.+2      	; 0x12a8 <MDIO_voidSetPinValue+0x74>
    12a6:	a9 c0       	rjmp	.+338    	; 0x13fa <MDIO_voidSetPinValue+0x1c6>
    12a8:	df c0       	rjmp	.+446    	; 0x1468 <MDIO_voidSetPinValue+0x234>
		{
		case DIO_PORTA:
			switch (A_pinValue)
    12aa:	8b 81       	ldd	r24, Y+3	; 0x03
    12ac:	28 2f       	mov	r18, r24
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	3b 87       	std	Y+11, r19	; 0x0b
    12b2:	2a 87       	std	Y+10, r18	; 0x0a
    12b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    12b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    12b8:	00 97       	sbiw	r24, 0x00	; 0
    12ba:	31 f0       	breq	.+12     	; 0x12c8 <MDIO_voidSetPinValue+0x94>
    12bc:	2a 85       	ldd	r18, Y+10	; 0x0a
    12be:	3b 85       	ldd	r19, Y+11	; 0x0b
    12c0:	21 30       	cpi	r18, 0x01	; 1
    12c2:	31 05       	cpc	r19, r1
    12c4:	b1 f0       	breq	.+44     	; 0x12f2 <MDIO_voidSetPinValue+0xbe>
    12c6:	d0 c0       	rjmp	.+416    	; 0x1468 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTA_REG,A_pinID);
    12c8:	ab e3       	ldi	r26, 0x3B	; 59
    12ca:	b0 e0       	ldi	r27, 0x00	; 0
    12cc:	eb e3       	ldi	r30, 0x3B	; 59
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	80 81       	ld	r24, Z
    12d2:	48 2f       	mov	r20, r24
    12d4:	8a 81       	ldd	r24, Y+2	; 0x02
    12d6:	28 2f       	mov	r18, r24
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	81 e0       	ldi	r24, 0x01	; 1
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	02 2e       	mov	r0, r18
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <MDIO_voidSetPinValue+0xb2>
    12e2:	88 0f       	add	r24, r24
    12e4:	99 1f       	adc	r25, r25
    12e6:	0a 94       	dec	r0
    12e8:	e2 f7       	brpl	.-8      	; 0x12e2 <MDIO_voidSetPinValue+0xae>
    12ea:	80 95       	com	r24
    12ec:	84 23       	and	r24, r20
    12ee:	8c 93       	st	X, r24
    12f0:	bb c0       	rjmp	.+374    	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTA_REG,A_pinID);
    12f2:	ab e3       	ldi	r26, 0x3B	; 59
    12f4:	b0 e0       	ldi	r27, 0x00	; 0
    12f6:	eb e3       	ldi	r30, 0x3B	; 59
    12f8:	f0 e0       	ldi	r31, 0x00	; 0
    12fa:	80 81       	ld	r24, Z
    12fc:	48 2f       	mov	r20, r24
    12fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1300:	28 2f       	mov	r18, r24
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	02 2e       	mov	r0, r18
    130a:	02 c0       	rjmp	.+4      	; 0x1310 <MDIO_voidSetPinValue+0xdc>
    130c:	88 0f       	add	r24, r24
    130e:	99 1f       	adc	r25, r25
    1310:	0a 94       	dec	r0
    1312:	e2 f7       	brpl	.-8      	; 0x130c <MDIO_voidSetPinValue+0xd8>
    1314:	84 2b       	or	r24, r20
    1316:	8c 93       	st	X, r24
    1318:	a7 c0       	rjmp	.+334    	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinValue)
    131a:	8b 81       	ldd	r24, Y+3	; 0x03
    131c:	28 2f       	mov	r18, r24
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	39 87       	std	Y+9, r19	; 0x09
    1322:	28 87       	std	Y+8, r18	; 0x08
    1324:	88 85       	ldd	r24, Y+8	; 0x08
    1326:	99 85       	ldd	r25, Y+9	; 0x09
    1328:	00 97       	sbiw	r24, 0x00	; 0
    132a:	31 f0       	breq	.+12     	; 0x1338 <MDIO_voidSetPinValue+0x104>
    132c:	28 85       	ldd	r18, Y+8	; 0x08
    132e:	39 85       	ldd	r19, Y+9	; 0x09
    1330:	21 30       	cpi	r18, 0x01	; 1
    1332:	31 05       	cpc	r19, r1
    1334:	b1 f0       	breq	.+44     	; 0x1362 <MDIO_voidSetPinValue+0x12e>
    1336:	98 c0       	rjmp	.+304    	; 0x1468 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTB_REG,A_pinID);
    1338:	a8 e3       	ldi	r26, 0x38	; 56
    133a:	b0 e0       	ldi	r27, 0x00	; 0
    133c:	e8 e3       	ldi	r30, 0x38	; 56
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	80 81       	ld	r24, Z
    1342:	48 2f       	mov	r20, r24
    1344:	8a 81       	ldd	r24, Y+2	; 0x02
    1346:	28 2f       	mov	r18, r24
    1348:	30 e0       	ldi	r19, 0x00	; 0
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	02 2e       	mov	r0, r18
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <MDIO_voidSetPinValue+0x122>
    1352:	88 0f       	add	r24, r24
    1354:	99 1f       	adc	r25, r25
    1356:	0a 94       	dec	r0
    1358:	e2 f7       	brpl	.-8      	; 0x1352 <MDIO_voidSetPinValue+0x11e>
    135a:	80 95       	com	r24
    135c:	84 23       	and	r24, r20
    135e:	8c 93       	st	X, r24
    1360:	83 c0       	rjmp	.+262    	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTB_REG,A_pinID);
    1362:	a8 e3       	ldi	r26, 0x38	; 56
    1364:	b0 e0       	ldi	r27, 0x00	; 0
    1366:	e8 e3       	ldi	r30, 0x38	; 56
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	80 81       	ld	r24, Z
    136c:	48 2f       	mov	r20, r24
    136e:	8a 81       	ldd	r24, Y+2	; 0x02
    1370:	28 2f       	mov	r18, r24
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	02 2e       	mov	r0, r18
    137a:	02 c0       	rjmp	.+4      	; 0x1380 <MDIO_voidSetPinValue+0x14c>
    137c:	88 0f       	add	r24, r24
    137e:	99 1f       	adc	r25, r25
    1380:	0a 94       	dec	r0
    1382:	e2 f7       	brpl	.-8      	; 0x137c <MDIO_voidSetPinValue+0x148>
    1384:	84 2b       	or	r24, r20
    1386:	8c 93       	st	X, r24
    1388:	6f c0       	rjmp	.+222    	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinValue)
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	28 2f       	mov	r18, r24
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	3f 83       	std	Y+7, r19	; 0x07
    1392:	2e 83       	std	Y+6, r18	; 0x06
    1394:	8e 81       	ldd	r24, Y+6	; 0x06
    1396:	9f 81       	ldd	r25, Y+7	; 0x07
    1398:	00 97       	sbiw	r24, 0x00	; 0
    139a:	31 f0       	breq	.+12     	; 0x13a8 <MDIO_voidSetPinValue+0x174>
    139c:	2e 81       	ldd	r18, Y+6	; 0x06
    139e:	3f 81       	ldd	r19, Y+7	; 0x07
    13a0:	21 30       	cpi	r18, 0x01	; 1
    13a2:	31 05       	cpc	r19, r1
    13a4:	b1 f0       	breq	.+44     	; 0x13d2 <MDIO_voidSetPinValue+0x19e>
    13a6:	60 c0       	rjmp	.+192    	; 0x1468 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTC_REG,A_pinID);
    13a8:	a5 e3       	ldi	r26, 0x35	; 53
    13aa:	b0 e0       	ldi	r27, 0x00	; 0
    13ac:	e5 e3       	ldi	r30, 0x35	; 53
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	80 81       	ld	r24, Z
    13b2:	48 2f       	mov	r20, r24
    13b4:	8a 81       	ldd	r24, Y+2	; 0x02
    13b6:	28 2f       	mov	r18, r24
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	02 2e       	mov	r0, r18
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <MDIO_voidSetPinValue+0x192>
    13c2:	88 0f       	add	r24, r24
    13c4:	99 1f       	adc	r25, r25
    13c6:	0a 94       	dec	r0
    13c8:	e2 f7       	brpl	.-8      	; 0x13c2 <MDIO_voidSetPinValue+0x18e>
    13ca:	80 95       	com	r24
    13cc:	84 23       	and	r24, r20
    13ce:	8c 93       	st	X, r24
    13d0:	4b c0       	rjmp	.+150    	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTC_REG,A_pinID);
    13d2:	a5 e3       	ldi	r26, 0x35	; 53
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	e5 e3       	ldi	r30, 0x35	; 53
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 81       	ld	r24, Z
    13dc:	48 2f       	mov	r20, r24
    13de:	8a 81       	ldd	r24, Y+2	; 0x02
    13e0:	28 2f       	mov	r18, r24
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	81 e0       	ldi	r24, 0x01	; 1
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	02 2e       	mov	r0, r18
    13ea:	02 c0       	rjmp	.+4      	; 0x13f0 <MDIO_voidSetPinValue+0x1bc>
    13ec:	88 0f       	add	r24, r24
    13ee:	99 1f       	adc	r25, r25
    13f0:	0a 94       	dec	r0
    13f2:	e2 f7       	brpl	.-8      	; 0x13ec <MDIO_voidSetPinValue+0x1b8>
    13f4:	84 2b       	or	r24, r20
    13f6:	8c 93       	st	X, r24
    13f8:	37 c0       	rjmp	.+110    	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinValue)
    13fa:	8b 81       	ldd	r24, Y+3	; 0x03
    13fc:	28 2f       	mov	r18, r24
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	3d 83       	std	Y+5, r19	; 0x05
    1402:	2c 83       	std	Y+4, r18	; 0x04
    1404:	8c 81       	ldd	r24, Y+4	; 0x04
    1406:	9d 81       	ldd	r25, Y+5	; 0x05
    1408:	00 97       	sbiw	r24, 0x00	; 0
    140a:	31 f0       	breq	.+12     	; 0x1418 <MDIO_voidSetPinValue+0x1e4>
    140c:	2c 81       	ldd	r18, Y+4	; 0x04
    140e:	3d 81       	ldd	r19, Y+5	; 0x05
    1410:	21 30       	cpi	r18, 0x01	; 1
    1412:	31 05       	cpc	r19, r1
    1414:	b1 f0       	breq	.+44     	; 0x1442 <MDIO_voidSetPinValue+0x20e>
    1416:	28 c0       	rjmp	.+80     	; 0x1468 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTD_REG,A_pinID);
    1418:	a2 e3       	ldi	r26, 0x32	; 50
    141a:	b0 e0       	ldi	r27, 0x00	; 0
    141c:	e2 e3       	ldi	r30, 0x32	; 50
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	80 81       	ld	r24, Z
    1422:	48 2f       	mov	r20, r24
    1424:	8a 81       	ldd	r24, Y+2	; 0x02
    1426:	28 2f       	mov	r18, r24
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	02 2e       	mov	r0, r18
    1430:	02 c0       	rjmp	.+4      	; 0x1436 <MDIO_voidSetPinValue+0x202>
    1432:	88 0f       	add	r24, r24
    1434:	99 1f       	adc	r25, r25
    1436:	0a 94       	dec	r0
    1438:	e2 f7       	brpl	.-8      	; 0x1432 <MDIO_voidSetPinValue+0x1fe>
    143a:	80 95       	com	r24
    143c:	84 23       	and	r24, r20
    143e:	8c 93       	st	X, r24
    1440:	13 c0       	rjmp	.+38     	; 0x1468 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTD_REG,A_pinID);
    1442:	a2 e3       	ldi	r26, 0x32	; 50
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	e2 e3       	ldi	r30, 0x32	; 50
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	80 81       	ld	r24, Z
    144c:	48 2f       	mov	r20, r24
    144e:	8a 81       	ldd	r24, Y+2	; 0x02
    1450:	28 2f       	mov	r18, r24
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	02 2e       	mov	r0, r18
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <MDIO_voidSetPinValue+0x22c>
    145c:	88 0f       	add	r24, r24
    145e:	99 1f       	adc	r25, r25
    1460:	0a 94       	dec	r0
    1462:	e2 f7       	brpl	.-8      	; 0x145c <MDIO_voidSetPinValue+0x228>
    1464:	84 2b       	or	r24, r20
    1466:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    1468:	2d 96       	adiw	r28, 0x0d	; 13
    146a:	0f b6       	in	r0, 0x3f	; 63
    146c:	f8 94       	cli
    146e:	de bf       	out	0x3e, r29	; 62
    1470:	0f be       	out	0x3f, r0	; 63
    1472:	cd bf       	out	0x3d, r28	; 61
    1474:	cf 91       	pop	r28
    1476:	df 91       	pop	r29
    1478:	08 95       	ret

0000147a <MDIO_getPinValue>:




DIO_VALUE_e MDIO_getPinValue(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    147a:	df 93       	push	r29
    147c:	cf 93       	push	r28
    147e:	00 d0       	rcall	.+0      	; 0x1480 <MDIO_getPinValue+0x6>
    1480:	00 d0       	rcall	.+0      	; 0x1482 <MDIO_getPinValue+0x8>
    1482:	0f 92       	push	r0
    1484:	cd b7       	in	r28, 0x3d	; 61
    1486:	de b7       	in	r29, 0x3e	; 62
    1488:	8a 83       	std	Y+2, r24	; 0x02
    148a:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_PinValue;

	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    148c:	8a 81       	ldd	r24, Y+2	; 0x02
    148e:	84 30       	cpi	r24, 0x04	; 4
    1490:	08 f0       	brcs	.+2      	; 0x1494 <MDIO_getPinValue+0x1a>
    1492:	6b c0       	rjmp	.+214    	; 0x156a <MDIO_getPinValue+0xf0>
    1494:	8b 81       	ldd	r24, Y+3	; 0x03
    1496:	88 30       	cpi	r24, 0x08	; 8
    1498:	08 f0       	brcs	.+2      	; 0x149c <MDIO_getPinValue+0x22>
    149a:	67 c0       	rjmp	.+206    	; 0x156a <MDIO_getPinValue+0xf0>
	{
		switch (A_portID)
    149c:	8a 81       	ldd	r24, Y+2	; 0x02
    149e:	28 2f       	mov	r18, r24
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	3d 83       	std	Y+5, r19	; 0x05
    14a4:	2c 83       	std	Y+4, r18	; 0x04
    14a6:	4c 81       	ldd	r20, Y+4	; 0x04
    14a8:	5d 81       	ldd	r21, Y+5	; 0x05
    14aa:	41 30       	cpi	r20, 0x01	; 1
    14ac:	51 05       	cpc	r21, r1
    14ae:	41 f1       	breq	.+80     	; 0x1500 <MDIO_getPinValue+0x86>
    14b0:	8c 81       	ldd	r24, Y+4	; 0x04
    14b2:	9d 81       	ldd	r25, Y+5	; 0x05
    14b4:	82 30       	cpi	r24, 0x02	; 2
    14b6:	91 05       	cpc	r25, r1
    14b8:	34 f4       	brge	.+12     	; 0x14c6 <MDIO_getPinValue+0x4c>
    14ba:	2c 81       	ldd	r18, Y+4	; 0x04
    14bc:	3d 81       	ldd	r19, Y+5	; 0x05
    14be:	21 15       	cp	r18, r1
    14c0:	31 05       	cpc	r19, r1
    14c2:	61 f0       	breq	.+24     	; 0x14dc <MDIO_getPinValue+0x62>
    14c4:	52 c0       	rjmp	.+164    	; 0x156a <MDIO_getPinValue+0xf0>
    14c6:	4c 81       	ldd	r20, Y+4	; 0x04
    14c8:	5d 81       	ldd	r21, Y+5	; 0x05
    14ca:	42 30       	cpi	r20, 0x02	; 2
    14cc:	51 05       	cpc	r21, r1
    14ce:	51 f1       	breq	.+84     	; 0x1524 <MDIO_getPinValue+0xaa>
    14d0:	8c 81       	ldd	r24, Y+4	; 0x04
    14d2:	9d 81       	ldd	r25, Y+5	; 0x05
    14d4:	83 30       	cpi	r24, 0x03	; 3
    14d6:	91 05       	cpc	r25, r1
    14d8:	b9 f1       	breq	.+110    	; 0x1548 <MDIO_getPinValue+0xce>
    14da:	47 c0       	rjmp	.+142    	; 0x156a <MDIO_getPinValue+0xf0>
		{
		case DIO_PORTA:
			local_PinValue = GET_BIT(PINA_REG,A_pinID);
    14dc:	e9 e3       	ldi	r30, 0x39	; 57
    14de:	f0 e0       	ldi	r31, 0x00	; 0
    14e0:	80 81       	ld	r24, Z
    14e2:	28 2f       	mov	r18, r24
    14e4:	30 e0       	ldi	r19, 0x00	; 0
    14e6:	8b 81       	ldd	r24, Y+3	; 0x03
    14e8:	88 2f       	mov	r24, r24
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	a9 01       	movw	r20, r18
    14ee:	02 c0       	rjmp	.+4      	; 0x14f4 <MDIO_getPinValue+0x7a>
    14f0:	55 95       	asr	r21
    14f2:	47 95       	ror	r20
    14f4:	8a 95       	dec	r24
    14f6:	e2 f7       	brpl	.-8      	; 0x14f0 <MDIO_getPinValue+0x76>
    14f8:	ca 01       	movw	r24, r20
    14fa:	81 70       	andi	r24, 0x01	; 1
    14fc:	89 83       	std	Y+1, r24	; 0x01
    14fe:	35 c0       	rjmp	.+106    	; 0x156a <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTB:
			local_PinValue = GET_BIT(PINB_REG,A_pinID);
    1500:	e6 e3       	ldi	r30, 0x36	; 54
    1502:	f0 e0       	ldi	r31, 0x00	; 0
    1504:	80 81       	ld	r24, Z
    1506:	28 2f       	mov	r18, r24
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	8b 81       	ldd	r24, Y+3	; 0x03
    150c:	88 2f       	mov	r24, r24
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	a9 01       	movw	r20, r18
    1512:	02 c0       	rjmp	.+4      	; 0x1518 <MDIO_getPinValue+0x9e>
    1514:	55 95       	asr	r21
    1516:	47 95       	ror	r20
    1518:	8a 95       	dec	r24
    151a:	e2 f7       	brpl	.-8      	; 0x1514 <MDIO_getPinValue+0x9a>
    151c:	ca 01       	movw	r24, r20
    151e:	81 70       	andi	r24, 0x01	; 1
    1520:	89 83       	std	Y+1, r24	; 0x01
    1522:	23 c0       	rjmp	.+70     	; 0x156a <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTC:
			local_PinValue = GET_BIT(PINC_REG,A_pinID);
    1524:	e3 e3       	ldi	r30, 0x33	; 51
    1526:	f0 e0       	ldi	r31, 0x00	; 0
    1528:	80 81       	ld	r24, Z
    152a:	28 2f       	mov	r18, r24
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	8b 81       	ldd	r24, Y+3	; 0x03
    1530:	88 2f       	mov	r24, r24
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	a9 01       	movw	r20, r18
    1536:	02 c0       	rjmp	.+4      	; 0x153c <MDIO_getPinValue+0xc2>
    1538:	55 95       	asr	r21
    153a:	47 95       	ror	r20
    153c:	8a 95       	dec	r24
    153e:	e2 f7       	brpl	.-8      	; 0x1538 <MDIO_getPinValue+0xbe>
    1540:	ca 01       	movw	r24, r20
    1542:	81 70       	andi	r24, 0x01	; 1
    1544:	89 83       	std	Y+1, r24	; 0x01
    1546:	11 c0       	rjmp	.+34     	; 0x156a <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTD:
			local_PinValue = GET_BIT(PIND_REG,A_pinID);
    1548:	e0 e3       	ldi	r30, 0x30	; 48
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	80 81       	ld	r24, Z
    154e:	28 2f       	mov	r18, r24
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	8b 81       	ldd	r24, Y+3	; 0x03
    1554:	88 2f       	mov	r24, r24
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	a9 01       	movw	r20, r18
    155a:	02 c0       	rjmp	.+4      	; 0x1560 <MDIO_getPinValue+0xe6>
    155c:	55 95       	asr	r21
    155e:	47 95       	ror	r20
    1560:	8a 95       	dec	r24
    1562:	e2 f7       	brpl	.-8      	; 0x155c <MDIO_getPinValue+0xe2>
    1564:	ca 01       	movw	r24, r20
    1566:	81 70       	andi	r24, 0x01	; 1
    1568:	89 83       	std	Y+1, r24	; 0x01
	{
		// Do Nothing
	}


	return local_PinValue;
    156a:	89 81       	ldd	r24, Y+1	; 0x01
}
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	0f 90       	pop	r0
    1576:	cf 91       	pop	r28
    1578:	df 91       	pop	r29
    157a:	08 95       	ret

0000157c <MDIO_voidTogglePinValue>:

void MDIO_voidTogglePinValue (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    157c:	df 93       	push	r29
    157e:	cf 93       	push	r28
    1580:	00 d0       	rcall	.+0      	; 0x1582 <MDIO_voidTogglePinValue+0x6>
    1582:	00 d0       	rcall	.+0      	; 0x1584 <MDIO_voidTogglePinValue+0x8>
    1584:	cd b7       	in	r28, 0x3d	; 61
    1586:	de b7       	in	r29, 0x3e	; 62
    1588:	89 83       	std	Y+1, r24	; 0x01
    158a:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    158c:	89 81       	ldd	r24, Y+1	; 0x01
    158e:	84 30       	cpi	r24, 0x04	; 4
    1590:	08 f0       	brcs	.+2      	; 0x1594 <MDIO_voidTogglePinValue+0x18>
    1592:	72 c0       	rjmp	.+228    	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
    1594:	8a 81       	ldd	r24, Y+2	; 0x02
    1596:	88 30       	cpi	r24, 0x08	; 8
    1598:	08 f0       	brcs	.+2      	; 0x159c <MDIO_voidTogglePinValue+0x20>
    159a:	6e c0       	rjmp	.+220    	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
	{
		switch (A_portID)
    159c:	89 81       	ldd	r24, Y+1	; 0x01
    159e:	28 2f       	mov	r18, r24
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	3c 83       	std	Y+4, r19	; 0x04
    15a4:	2b 83       	std	Y+3, r18	; 0x03
    15a6:	8b 81       	ldd	r24, Y+3	; 0x03
    15a8:	9c 81       	ldd	r25, Y+4	; 0x04
    15aa:	81 30       	cpi	r24, 0x01	; 1
    15ac:	91 05       	cpc	r25, r1
    15ae:	49 f1       	breq	.+82     	; 0x1602 <MDIO_voidTogglePinValue+0x86>
    15b0:	2b 81       	ldd	r18, Y+3	; 0x03
    15b2:	3c 81       	ldd	r19, Y+4	; 0x04
    15b4:	22 30       	cpi	r18, 0x02	; 2
    15b6:	31 05       	cpc	r19, r1
    15b8:	2c f4       	brge	.+10     	; 0x15c4 <MDIO_voidTogglePinValue+0x48>
    15ba:	8b 81       	ldd	r24, Y+3	; 0x03
    15bc:	9c 81       	ldd	r25, Y+4	; 0x04
    15be:	00 97       	sbiw	r24, 0x00	; 0
    15c0:	61 f0       	breq	.+24     	; 0x15da <MDIO_voidTogglePinValue+0x5e>
    15c2:	5a c0       	rjmp	.+180    	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
    15c4:	2b 81       	ldd	r18, Y+3	; 0x03
    15c6:	3c 81       	ldd	r19, Y+4	; 0x04
    15c8:	22 30       	cpi	r18, 0x02	; 2
    15ca:	31 05       	cpc	r19, r1
    15cc:	71 f1       	breq	.+92     	; 0x162a <MDIO_voidTogglePinValue+0xae>
    15ce:	8b 81       	ldd	r24, Y+3	; 0x03
    15d0:	9c 81       	ldd	r25, Y+4	; 0x04
    15d2:	83 30       	cpi	r24, 0x03	; 3
    15d4:	91 05       	cpc	r25, r1
    15d6:	e9 f1       	breq	.+122    	; 0x1652 <MDIO_voidTogglePinValue+0xd6>
    15d8:	4f c0       	rjmp	.+158    	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
    15da:	ab e3       	ldi	r26, 0x3B	; 59
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	eb e3       	ldi	r30, 0x3B	; 59
    15e0:	f0 e0       	ldi	r31, 0x00	; 0
    15e2:	80 81       	ld	r24, Z
    15e4:	48 2f       	mov	r20, r24
    15e6:	8a 81       	ldd	r24, Y+2	; 0x02
    15e8:	28 2f       	mov	r18, r24
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	81 e0       	ldi	r24, 0x01	; 1
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	02 2e       	mov	r0, r18
    15f2:	02 c0       	rjmp	.+4      	; 0x15f8 <MDIO_voidTogglePinValue+0x7c>
    15f4:	88 0f       	add	r24, r24
    15f6:	99 1f       	adc	r25, r25
    15f8:	0a 94       	dec	r0
    15fa:	e2 f7       	brpl	.-8      	; 0x15f4 <MDIO_voidTogglePinValue+0x78>
    15fc:	84 27       	eor	r24, r20
    15fe:	8c 93       	st	X, r24
    1600:	3b c0       	rjmp	.+118    	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
    1602:	a8 e3       	ldi	r26, 0x38	; 56
    1604:	b0 e0       	ldi	r27, 0x00	; 0
    1606:	e8 e3       	ldi	r30, 0x38	; 56
    1608:	f0 e0       	ldi	r31, 0x00	; 0
    160a:	80 81       	ld	r24, Z
    160c:	48 2f       	mov	r20, r24
    160e:	8a 81       	ldd	r24, Y+2	; 0x02
    1610:	28 2f       	mov	r18, r24
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	81 e0       	ldi	r24, 0x01	; 1
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	02 2e       	mov	r0, r18
    161a:	02 c0       	rjmp	.+4      	; 0x1620 <MDIO_voidTogglePinValue+0xa4>
    161c:	88 0f       	add	r24, r24
    161e:	99 1f       	adc	r25, r25
    1620:	0a 94       	dec	r0
    1622:	e2 f7       	brpl	.-8      	; 0x161c <MDIO_voidTogglePinValue+0xa0>
    1624:	84 27       	eor	r24, r20
    1626:	8c 93       	st	X, r24
    1628:	27 c0       	rjmp	.+78     	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
    162a:	a5 e3       	ldi	r26, 0x35	; 53
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	e5 e3       	ldi	r30, 0x35	; 53
    1630:	f0 e0       	ldi	r31, 0x00	; 0
    1632:	80 81       	ld	r24, Z
    1634:	48 2f       	mov	r20, r24
    1636:	8a 81       	ldd	r24, Y+2	; 0x02
    1638:	28 2f       	mov	r18, r24
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	81 e0       	ldi	r24, 0x01	; 1
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	02 2e       	mov	r0, r18
    1642:	02 c0       	rjmp	.+4      	; 0x1648 <MDIO_voidTogglePinValue+0xcc>
    1644:	88 0f       	add	r24, r24
    1646:	99 1f       	adc	r25, r25
    1648:	0a 94       	dec	r0
    164a:	e2 f7       	brpl	.-8      	; 0x1644 <MDIO_voidTogglePinValue+0xc8>
    164c:	84 27       	eor	r24, r20
    164e:	8c 93       	st	X, r24
    1650:	13 c0       	rjmp	.+38     	; 0x1678 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
    1652:	a2 e3       	ldi	r26, 0x32	; 50
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	e2 e3       	ldi	r30, 0x32	; 50
    1658:	f0 e0       	ldi	r31, 0x00	; 0
    165a:	80 81       	ld	r24, Z
    165c:	48 2f       	mov	r20, r24
    165e:	8a 81       	ldd	r24, Y+2	; 0x02
    1660:	28 2f       	mov	r18, r24
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	02 2e       	mov	r0, r18
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <MDIO_voidTogglePinValue+0xf4>
    166c:	88 0f       	add	r24, r24
    166e:	99 1f       	adc	r25, r25
    1670:	0a 94       	dec	r0
    1672:	e2 f7       	brpl	.-8      	; 0x166c <MDIO_voidTogglePinValue+0xf0>
    1674:	84 27       	eor	r24, r20
    1676:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    1678:	0f 90       	pop	r0
    167a:	0f 90       	pop	r0
    167c:	0f 90       	pop	r0
    167e:	0f 90       	pop	r0
    1680:	cf 91       	pop	r28
    1682:	df 91       	pop	r29
    1684:	08 95       	ret

00001686 <MDIO_voidSetPortDirection>:


void MDIO_voidSetPortDirection (DIO_PORT_e A_portID, u8 A_u8PortDirection)
{
    1686:	df 93       	push	r29
    1688:	cf 93       	push	r28
    168a:	00 d0       	rcall	.+0      	; 0x168c <MDIO_voidSetPortDirection+0x6>
    168c:	00 d0       	rcall	.+0      	; 0x168e <MDIO_voidSetPortDirection+0x8>
    168e:	cd b7       	in	r28, 0x3d	; 61
    1690:	de b7       	in	r29, 0x3e	; 62
    1692:	89 83       	std	Y+1, r24	; 0x01
    1694:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    1696:	89 81       	ldd	r24, Y+1	; 0x01
    1698:	84 30       	cpi	r24, 0x04	; 4
    169a:	90 f5       	brcc	.+100    	; 0x1700 <MDIO_voidSetPortDirection+0x7a>
	{
		switch (A_portID)
    169c:	89 81       	ldd	r24, Y+1	; 0x01
    169e:	28 2f       	mov	r18, r24
    16a0:	30 e0       	ldi	r19, 0x00	; 0
    16a2:	3c 83       	std	Y+4, r19	; 0x04
    16a4:	2b 83       	std	Y+3, r18	; 0x03
    16a6:	8b 81       	ldd	r24, Y+3	; 0x03
    16a8:	9c 81       	ldd	r25, Y+4	; 0x04
    16aa:	81 30       	cpi	r24, 0x01	; 1
    16ac:	91 05       	cpc	r25, r1
    16ae:	d1 f0       	breq	.+52     	; 0x16e4 <MDIO_voidSetPortDirection+0x5e>
    16b0:	2b 81       	ldd	r18, Y+3	; 0x03
    16b2:	3c 81       	ldd	r19, Y+4	; 0x04
    16b4:	22 30       	cpi	r18, 0x02	; 2
    16b6:	31 05       	cpc	r19, r1
    16b8:	2c f4       	brge	.+10     	; 0x16c4 <MDIO_voidSetPortDirection+0x3e>
    16ba:	8b 81       	ldd	r24, Y+3	; 0x03
    16bc:	9c 81       	ldd	r25, Y+4	; 0x04
    16be:	00 97       	sbiw	r24, 0x00	; 0
    16c0:	61 f0       	breq	.+24     	; 0x16da <MDIO_voidSetPortDirection+0x54>
    16c2:	1e c0       	rjmp	.+60     	; 0x1700 <MDIO_voidSetPortDirection+0x7a>
    16c4:	2b 81       	ldd	r18, Y+3	; 0x03
    16c6:	3c 81       	ldd	r19, Y+4	; 0x04
    16c8:	22 30       	cpi	r18, 0x02	; 2
    16ca:	31 05       	cpc	r19, r1
    16cc:	81 f0       	breq	.+32     	; 0x16ee <MDIO_voidSetPortDirection+0x68>
    16ce:	8b 81       	ldd	r24, Y+3	; 0x03
    16d0:	9c 81       	ldd	r25, Y+4	; 0x04
    16d2:	83 30       	cpi	r24, 0x03	; 3
    16d4:	91 05       	cpc	r25, r1
    16d6:	81 f0       	breq	.+32     	; 0x16f8 <MDIO_voidSetPortDirection+0x72>
    16d8:	13 c0       	rjmp	.+38     	; 0x1700 <MDIO_voidSetPortDirection+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8PortDirection;
    16da:	ea e3       	ldi	r30, 0x3A	; 58
    16dc:	f0 e0       	ldi	r31, 0x00	; 0
    16de:	8a 81       	ldd	r24, Y+2	; 0x02
    16e0:	80 83       	st	Z, r24
    16e2:	0e c0       	rjmp	.+28     	; 0x1700 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8PortDirection;
    16e4:	e7 e3       	ldi	r30, 0x37	; 55
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	8a 81       	ldd	r24, Y+2	; 0x02
    16ea:	80 83       	st	Z, r24
    16ec:	09 c0       	rjmp	.+18     	; 0x1700 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8PortDirection;
    16ee:	e4 e3       	ldi	r30, 0x34	; 52
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	8a 81       	ldd	r24, Y+2	; 0x02
    16f4:	80 83       	st	Z, r24
    16f6:	04 c0       	rjmp	.+8      	; 0x1700 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8PortDirection;
    16f8:	e1 e3       	ldi	r30, 0x31	; 49
    16fa:	f0 e0       	ldi	r31, 0x00	; 0
    16fc:	8a 81       	ldd	r24, Y+2	; 0x02
    16fe:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    1700:	0f 90       	pop	r0
    1702:	0f 90       	pop	r0
    1704:	0f 90       	pop	r0
    1706:	0f 90       	pop	r0
    1708:	cf 91       	pop	r28
    170a:	df 91       	pop	r29
    170c:	08 95       	ret

0000170e <MDIO_voidSetPortValue>:

void MDIO_voidSetPortValue (DIO_PORT_e A_portID, u8 A_u8PortValue)
{
    170e:	df 93       	push	r29
    1710:	cf 93       	push	r28
    1712:	00 d0       	rcall	.+0      	; 0x1714 <MDIO_voidSetPortValue+0x6>
    1714:	00 d0       	rcall	.+0      	; 0x1716 <MDIO_voidSetPortValue+0x8>
    1716:	cd b7       	in	r28, 0x3d	; 61
    1718:	de b7       	in	r29, 0x3e	; 62
    171a:	89 83       	std	Y+1, r24	; 0x01
    171c:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    171e:	89 81       	ldd	r24, Y+1	; 0x01
    1720:	84 30       	cpi	r24, 0x04	; 4
    1722:	90 f5       	brcc	.+100    	; 0x1788 <MDIO_voidSetPortValue+0x7a>
	{
		switch (A_portID)
    1724:	89 81       	ldd	r24, Y+1	; 0x01
    1726:	28 2f       	mov	r18, r24
    1728:	30 e0       	ldi	r19, 0x00	; 0
    172a:	3c 83       	std	Y+4, r19	; 0x04
    172c:	2b 83       	std	Y+3, r18	; 0x03
    172e:	8b 81       	ldd	r24, Y+3	; 0x03
    1730:	9c 81       	ldd	r25, Y+4	; 0x04
    1732:	81 30       	cpi	r24, 0x01	; 1
    1734:	91 05       	cpc	r25, r1
    1736:	d1 f0       	breq	.+52     	; 0x176c <MDIO_voidSetPortValue+0x5e>
    1738:	2b 81       	ldd	r18, Y+3	; 0x03
    173a:	3c 81       	ldd	r19, Y+4	; 0x04
    173c:	22 30       	cpi	r18, 0x02	; 2
    173e:	31 05       	cpc	r19, r1
    1740:	2c f4       	brge	.+10     	; 0x174c <MDIO_voidSetPortValue+0x3e>
    1742:	8b 81       	ldd	r24, Y+3	; 0x03
    1744:	9c 81       	ldd	r25, Y+4	; 0x04
    1746:	00 97       	sbiw	r24, 0x00	; 0
    1748:	61 f0       	breq	.+24     	; 0x1762 <MDIO_voidSetPortValue+0x54>
    174a:	1e c0       	rjmp	.+60     	; 0x1788 <MDIO_voidSetPortValue+0x7a>
    174c:	2b 81       	ldd	r18, Y+3	; 0x03
    174e:	3c 81       	ldd	r19, Y+4	; 0x04
    1750:	22 30       	cpi	r18, 0x02	; 2
    1752:	31 05       	cpc	r19, r1
    1754:	81 f0       	breq	.+32     	; 0x1776 <MDIO_voidSetPortValue+0x68>
    1756:	8b 81       	ldd	r24, Y+3	; 0x03
    1758:	9c 81       	ldd	r25, Y+4	; 0x04
    175a:	83 30       	cpi	r24, 0x03	; 3
    175c:	91 05       	cpc	r25, r1
    175e:	81 f0       	breq	.+32     	; 0x1780 <MDIO_voidSetPortValue+0x72>
    1760:	13 c0       	rjmp	.+38     	; 0x1788 <MDIO_voidSetPortValue+0x7a>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8PortValue;
    1762:	eb e3       	ldi	r30, 0x3B	; 59
    1764:	f0 e0       	ldi	r31, 0x00	; 0
    1766:	8a 81       	ldd	r24, Y+2	; 0x02
    1768:	80 83       	st	Z, r24
    176a:	0e c0       	rjmp	.+28     	; 0x1788 <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8PortValue;
    176c:	e8 e3       	ldi	r30, 0x38	; 56
    176e:	f0 e0       	ldi	r31, 0x00	; 0
    1770:	8a 81       	ldd	r24, Y+2	; 0x02
    1772:	80 83       	st	Z, r24
    1774:	09 c0       	rjmp	.+18     	; 0x1788 <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8PortValue;
    1776:	e5 e3       	ldi	r30, 0x35	; 53
    1778:	f0 e0       	ldi	r31, 0x00	; 0
    177a:	8a 81       	ldd	r24, Y+2	; 0x02
    177c:	80 83       	st	Z, r24
    177e:	04 c0       	rjmp	.+8      	; 0x1788 <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8PortValue;
    1780:	e2 e3       	ldi	r30, 0x32	; 50
    1782:	f0 e0       	ldi	r31, 0x00	; 0
    1784:	8a 81       	ldd	r24, Y+2	; 0x02
    1786:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    1788:	0f 90       	pop	r0
    178a:	0f 90       	pop	r0
    178c:	0f 90       	pop	r0
    178e:	0f 90       	pop	r0
    1790:	cf 91       	pop	r28
    1792:	df 91       	pop	r29
    1794:	08 95       	ret

00001796 <MDIO_voidInit>:


void MDIO_voidInit (void)
{
    1796:	df 93       	push	r29
    1798:	cf 93       	push	r28
    179a:	cd b7       	in	r28, 0x3d	; 61
    179c:	de b7       	in	r29, 0x3e	; 62

	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
    179e:	ea e3       	ldi	r30, 0x3A	; 58
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	10 82       	st	Z, r1
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
    17a4:	e7 e3       	ldi	r30, 0x37	; 55
    17a6:	f0 e0       	ldi	r31, 0x00	; 0
    17a8:	10 82       	st	Z, r1
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
    17aa:	e4 e3       	ldi	r30, 0x34	; 52
    17ac:	f0 e0       	ldi	r31, 0x00	; 0
    17ae:	10 82       	st	Z, r1
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
    17b0:	e1 e3       	ldi	r30, 0x31	; 49
    17b2:	f0 e0       	ldi	r31, 0x00	; 0
    17b4:	10 82       	st	Z, r1
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	/**********************************************************************/

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
    17b6:	eb e3       	ldi	r30, 0x3B	; 59
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
    17bc:	e8 e3       	ldi	r30, 0x38	; 56
    17be:	f0 e0       	ldi	r31, 0x00	; 0
    17c0:	10 82       	st	Z, r1
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
    17c2:	e5 e3       	ldi	r30, 0x35	; 53
    17c4:	f0 e0       	ldi	r31, 0x00	; 0
    17c6:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
    17c8:	e2 e3       	ldi	r30, 0x32	; 50
    17ca:	f0 e0       	ldi	r31, 0x00	; 0
    17cc:	10 82       	st	Z, r1
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
    17ce:	cf 91       	pop	r28
    17d0:	df 91       	pop	r29
    17d2:	08 95       	ret

000017d4 <HLED_voidTurnLEDOn>:
#include "../Include/HAL/LED/LED_Private.h"
#include "../Include/HAL/LED/LED_cfg.h"


void HLED_voidTurnLEDOn(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    17d4:	df 93       	push	r29
    17d6:	cf 93       	push	r28
    17d8:	00 d0       	rcall	.+0      	; 0x17da <HLED_voidTurnLEDOn+0x6>
    17da:	cd b7       	in	r28, 0x3d	; 61
    17dc:	de b7       	in	r29, 0x3e	; 62
    17de:	89 83       	std	Y+1, r24	; 0x01
    17e0:	6a 83       	std	Y+2, r22	; 0x02
	MDIO_voidSetPinValue(A_portID ,A_pinID , DIO_SET);
    17e2:	89 81       	ldd	r24, Y+1	; 0x01
    17e4:	6a 81       	ldd	r22, Y+2	; 0x02
    17e6:	41 e0       	ldi	r20, 0x01	; 1
    17e8:	0e 94 1a 09 	call	0x1234	; 0x1234 <MDIO_voidSetPinValue>
}
    17ec:	0f 90       	pop	r0
    17ee:	0f 90       	pop	r0
    17f0:	cf 91       	pop	r28
    17f2:	df 91       	pop	r29
    17f4:	08 95       	ret

000017f6 <HLED_voidTurnLEDOff>:
void HLED_voidTurnLEDOff(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    17f6:	df 93       	push	r29
    17f8:	cf 93       	push	r28
    17fa:	00 d0       	rcall	.+0      	; 0x17fc <HLED_voidTurnLEDOff+0x6>
    17fc:	cd b7       	in	r28, 0x3d	; 61
    17fe:	de b7       	in	r29, 0x3e	; 62
    1800:	89 83       	std	Y+1, r24	; 0x01
    1802:	6a 83       	std	Y+2, r22	; 0x02
	MDIO_voidSetPinValue(A_portID ,A_pinID , DIO_RESET);
    1804:	89 81       	ldd	r24, Y+1	; 0x01
    1806:	6a 81       	ldd	r22, Y+2	; 0x02
    1808:	40 e0       	ldi	r20, 0x00	; 0
    180a:	0e 94 1a 09 	call	0x1234	; 0x1234 <MDIO_voidSetPinValue>
}
    180e:	0f 90       	pop	r0
    1810:	0f 90       	pop	r0
    1812:	cf 91       	pop	r28
    1814:	df 91       	pop	r29
    1816:	08 95       	ret

00001818 <HLED_voidToggleLED>:
void HLED_voidToggleLED(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    1818:	df 93       	push	r29
    181a:	cf 93       	push	r28
    181c:	00 d0       	rcall	.+0      	; 0x181e <HLED_voidToggleLED+0x6>
    181e:	cd b7       	in	r28, 0x3d	; 61
    1820:	de b7       	in	r29, 0x3e	; 62
    1822:	89 83       	std	Y+1, r24	; 0x01
    1824:	6a 83       	std	Y+2, r22	; 0x02
	MDIO_voidTogglePinValue(A_portID,A_pinID);
    1826:	89 81       	ldd	r24, Y+1	; 0x01
    1828:	6a 81       	ldd	r22, Y+2	; 0x02
    182a:	0e 94 be 0a 	call	0x157c	; 0x157c <MDIO_voidTogglePinValue>
}
    182e:	0f 90       	pop	r0
    1830:	0f 90       	pop	r0
    1832:	cf 91       	pop	r28
    1834:	df 91       	pop	r29
    1836:	08 95       	ret

00001838 <HSSD_voidDisplayNumber>:


#include "../Include/HAL/SSD/SSD_Interface.h"

void HSSD_voidDisplayNumber(DIO_PORT_e A_portID, u8 A_u8NumberValue)
{
    1838:	df 93       	push	r29
    183a:	cf 93       	push	r28
    183c:	00 d0       	rcall	.+0      	; 0x183e <HSSD_voidDisplayNumber+0x6>
    183e:	00 d0       	rcall	.+0      	; 0x1840 <HSSD_voidDisplayNumber+0x8>
    1840:	cd b7       	in	r28, 0x3d	; 61
    1842:	de b7       	in	r29, 0x3e	; 62
    1844:	89 83       	std	Y+1, r24	; 0x01
    1846:	6a 83       	std	Y+2, r22	; 0x02
	// Check Input Validation
	if(A_portID <= DIO_PORTD)
    1848:	89 81       	ldd	r24, Y+1	; 0x01
    184a:	84 30       	cpi	r24, 0x04	; 4
    184c:	90 f5       	brcc	.+100    	; 0x18b2 <HSSD_voidDisplayNumber+0x7a>
	{
		switch(A_portID)
    184e:	89 81       	ldd	r24, Y+1	; 0x01
    1850:	28 2f       	mov	r18, r24
    1852:	30 e0       	ldi	r19, 0x00	; 0
    1854:	3c 83       	std	Y+4, r19	; 0x04
    1856:	2b 83       	std	Y+3, r18	; 0x03
    1858:	8b 81       	ldd	r24, Y+3	; 0x03
    185a:	9c 81       	ldd	r25, Y+4	; 0x04
    185c:	81 30       	cpi	r24, 0x01	; 1
    185e:	91 05       	cpc	r25, r1
    1860:	d1 f0       	breq	.+52     	; 0x1896 <HSSD_voidDisplayNumber+0x5e>
    1862:	2b 81       	ldd	r18, Y+3	; 0x03
    1864:	3c 81       	ldd	r19, Y+4	; 0x04
    1866:	22 30       	cpi	r18, 0x02	; 2
    1868:	31 05       	cpc	r19, r1
    186a:	2c f4       	brge	.+10     	; 0x1876 <HSSD_voidDisplayNumber+0x3e>
    186c:	8b 81       	ldd	r24, Y+3	; 0x03
    186e:	9c 81       	ldd	r25, Y+4	; 0x04
    1870:	00 97       	sbiw	r24, 0x00	; 0
    1872:	61 f0       	breq	.+24     	; 0x188c <HSSD_voidDisplayNumber+0x54>
    1874:	1e c0       	rjmp	.+60     	; 0x18b2 <HSSD_voidDisplayNumber+0x7a>
    1876:	2b 81       	ldd	r18, Y+3	; 0x03
    1878:	3c 81       	ldd	r19, Y+4	; 0x04
    187a:	22 30       	cpi	r18, 0x02	; 2
    187c:	31 05       	cpc	r19, r1
    187e:	81 f0       	breq	.+32     	; 0x18a0 <HSSD_voidDisplayNumber+0x68>
    1880:	8b 81       	ldd	r24, Y+3	; 0x03
    1882:	9c 81       	ldd	r25, Y+4	; 0x04
    1884:	83 30       	cpi	r24, 0x03	; 3
    1886:	91 05       	cpc	r25, r1
    1888:	81 f0       	breq	.+32     	; 0x18aa <HSSD_voidDisplayNumber+0x72>
    188a:	13 c0       	rjmp	.+38     	; 0x18b2 <HSSD_voidDisplayNumber+0x7a>
		{
		case DIO_PORTA:
//			MDIO_voidSetPortDirection(A_portID,~(A_u8NumberValue));
			MDIO_voidSetPortValue(A_portID,(A_u8NumberValue));
    188c:	89 81       	ldd	r24, Y+1	; 0x01
    188e:	6a 81       	ldd	r22, Y+2	; 0x02
    1890:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
    1894:	0e c0       	rjmp	.+28     	; 0x18b2 <HSSD_voidDisplayNumber+0x7a>
			break;
		case DIO_PORTB:
//			MDIO_voidSetPortDirection(A_portID,~(A_u8NumberValue));
			MDIO_voidSetPortValue(A_portID,(A_u8NumberValue));
    1896:	89 81       	ldd	r24, Y+1	; 0x01
    1898:	6a 81       	ldd	r22, Y+2	; 0x02
    189a:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
    189e:	09 c0       	rjmp	.+18     	; 0x18b2 <HSSD_voidDisplayNumber+0x7a>
			break;
		case DIO_PORTC:
//			MDIO_voidSetPortDirection(A_portID,~(A_u8NumberValue));
			MDIO_voidSetPortValue(A_portID,(A_u8NumberValue));
    18a0:	89 81       	ldd	r24, Y+1	; 0x01
    18a2:	6a 81       	ldd	r22, Y+2	; 0x02
    18a4:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
    18a8:	04 c0       	rjmp	.+8      	; 0x18b2 <HSSD_voidDisplayNumber+0x7a>
			break;
		case DIO_PORTD:
//			MDIO_voidSetPortDirection(A_portID,~(A_u8NumberValue));
			MDIO_voidSetPortValue(A_portID,(A_u8NumberValue));
    18aa:	89 81       	ldd	r24, Y+1	; 0x01
    18ac:	6a 81       	ldd	r22, Y+2	; 0x02
    18ae:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
	}
	else
	{
		// Do Nothing
	}
}
    18b2:	0f 90       	pop	r0
    18b4:	0f 90       	pop	r0
    18b6:	0f 90       	pop	r0
    18b8:	0f 90       	pop	r0
    18ba:	cf 91       	pop	r28
    18bc:	df 91       	pop	r29
    18be:	08 95       	ret

000018c0 <HSSD_voidDisplayNumberAscending>:

void HSSD_voidDisplayNumberAscending(DIO_PORT_e A_portID , u16 A_u16TimeToWait)
{
    18c0:	df 93       	push	r29
    18c2:	cf 93       	push	r28
    18c4:	cd b7       	in	r28, 0x3d	; 61
    18c6:	de b7       	in	r29, 0x3e	; 62
    18c8:	a1 97       	sbiw	r28, 0x21	; 33
    18ca:	0f b6       	in	r0, 0x3f	; 63
    18cc:	f8 94       	cli
    18ce:	de bf       	out	0x3e, r29	; 62
    18d0:	0f be       	out	0x3f, r0	; 63
    18d2:	cd bf       	out	0x3d, r28	; 61
    18d4:	8a 8f       	std	Y+26, r24	; 0x1a
    18d6:	7c 8f       	std	Y+28, r23	; 0x1c
    18d8:	6b 8f       	std	Y+27, r22	; 0x1b
	u8 SSD_arr[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    18da:	ce 01       	movw	r24, r28
    18dc:	40 96       	adiw	r24, 0x10	; 16
    18de:	9e 8f       	std	Y+30, r25	; 0x1e
    18e0:	8d 8f       	std	Y+29, r24	; 0x1d
    18e2:	e5 e7       	ldi	r30, 0x75	; 117
    18e4:	f1 e0       	ldi	r31, 0x01	; 1
    18e6:	f8 a3       	std	Y+32, r31	; 0x20
    18e8:	ef 8f       	std	Y+31, r30	; 0x1f
    18ea:	fa e0       	ldi	r31, 0x0A	; 10
    18ec:	f9 a3       	std	Y+33, r31	; 0x21
    18ee:	ef 8d       	ldd	r30, Y+31	; 0x1f
    18f0:	f8 a1       	ldd	r31, Y+32	; 0x20
    18f2:	00 80       	ld	r0, Z
    18f4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    18f6:	98 a1       	ldd	r25, Y+32	; 0x20
    18f8:	01 96       	adiw	r24, 0x01	; 1
    18fa:	98 a3       	std	Y+32, r25	; 0x20
    18fc:	8f 8f       	std	Y+31, r24	; 0x1f
    18fe:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1900:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1902:	00 82       	st	Z, r0
    1904:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1906:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1908:	01 96       	adiw	r24, 0x01	; 1
    190a:	9e 8f       	std	Y+30, r25	; 0x1e
    190c:	8d 8f       	std	Y+29, r24	; 0x1d
    190e:	99 a1       	ldd	r25, Y+33	; 0x21
    1910:	91 50       	subi	r25, 0x01	; 1
    1912:	99 a3       	std	Y+33, r25	; 0x21
    1914:	e9 a1       	ldd	r30, Y+33	; 0x21
    1916:	ee 23       	and	r30, r30
    1918:	51 f7       	brne	.-44     	; 0x18ee <HSSD_voidDisplayNumberAscending+0x2e>
	for(u8 i=0; i<=9;i++)
    191a:	1f 86       	std	Y+15, r1	; 0x0f
    191c:	89 c0       	rjmp	.+274    	; 0x1a30 <HSSD_voidDisplayNumberAscending+0x170>
	{
//		MDIO_voidSetPortDirection(A_portID,~(SSD_arr[i]));
		MDIO_voidSetPortValue(A_portID,(SSD_arr[i]));
    191e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1920:	28 2f       	mov	r18, r24
    1922:	30 e0       	ldi	r19, 0x00	; 0
    1924:	ce 01       	movw	r24, r28
    1926:	40 96       	adiw	r24, 0x10	; 16
    1928:	fc 01       	movw	r30, r24
    192a:	e2 0f       	add	r30, r18
    192c:	f3 1f       	adc	r31, r19
    192e:	90 81       	ld	r25, Z
    1930:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1932:	69 2f       	mov	r22, r25
    1934:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
		_delay_ms(A_u16TimeToWait);
    1938:	8b 8d       	ldd	r24, Y+27	; 0x1b
    193a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    193c:	cc 01       	movw	r24, r24
    193e:	a0 e0       	ldi	r26, 0x00	; 0
    1940:	b0 e0       	ldi	r27, 0x00	; 0
    1942:	bc 01       	movw	r22, r24
    1944:	cd 01       	movw	r24, r26
    1946:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    194a:	dc 01       	movw	r26, r24
    194c:	cb 01       	movw	r24, r22
    194e:	8b 87       	std	Y+11, r24	; 0x0b
    1950:	9c 87       	std	Y+12, r25	; 0x0c
    1952:	ad 87       	std	Y+13, r26	; 0x0d
    1954:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1956:	6b 85       	ldd	r22, Y+11	; 0x0b
    1958:	7c 85       	ldd	r23, Y+12	; 0x0c
    195a:	8d 85       	ldd	r24, Y+13	; 0x0d
    195c:	9e 85       	ldd	r25, Y+14	; 0x0e
    195e:	20 e0       	ldi	r18, 0x00	; 0
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	4a ef       	ldi	r20, 0xFA	; 250
    1964:	54 e4       	ldi	r21, 0x44	; 68
    1966:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    196a:	dc 01       	movw	r26, r24
    196c:	cb 01       	movw	r24, r22
    196e:	8f 83       	std	Y+7, r24	; 0x07
    1970:	98 87       	std	Y+8, r25	; 0x08
    1972:	a9 87       	std	Y+9, r26	; 0x09
    1974:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1976:	6f 81       	ldd	r22, Y+7	; 0x07
    1978:	78 85       	ldd	r23, Y+8	; 0x08
    197a:	89 85       	ldd	r24, Y+9	; 0x09
    197c:	9a 85       	ldd	r25, Y+10	; 0x0a
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	40 e8       	ldi	r20, 0x80	; 128
    1984:	5f e3       	ldi	r21, 0x3F	; 63
    1986:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    198a:	88 23       	and	r24, r24
    198c:	2c f4       	brge	.+10     	; 0x1998 <HSSD_voidDisplayNumberAscending+0xd8>
		__ticks = 1;
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	9e 83       	std	Y+6, r25	; 0x06
    1994:	8d 83       	std	Y+5, r24	; 0x05
    1996:	3f c0       	rjmp	.+126    	; 0x1a16 <HSSD_voidDisplayNumberAscending+0x156>
	else if (__tmp > 65535)
    1998:	6f 81       	ldd	r22, Y+7	; 0x07
    199a:	78 85       	ldd	r23, Y+8	; 0x08
    199c:	89 85       	ldd	r24, Y+9	; 0x09
    199e:	9a 85       	ldd	r25, Y+10	; 0x0a
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	3f ef       	ldi	r19, 0xFF	; 255
    19a4:	4f e7       	ldi	r20, 0x7F	; 127
    19a6:	57 e4       	ldi	r21, 0x47	; 71
    19a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19ac:	18 16       	cp	r1, r24
    19ae:	4c f5       	brge	.+82     	; 0x1a02 <HSSD_voidDisplayNumberAscending+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b0:	6b 85       	ldd	r22, Y+11	; 0x0b
    19b2:	7c 85       	ldd	r23, Y+12	; 0x0c
    19b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    19b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e2       	ldi	r20, 0x20	; 32
    19be:	51 e4       	ldi	r21, 0x41	; 65
    19c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	bc 01       	movw	r22, r24
    19ca:	cd 01       	movw	r24, r26
    19cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19d0:	dc 01       	movw	r26, r24
    19d2:	cb 01       	movw	r24, r22
    19d4:	9e 83       	std	Y+6, r25	; 0x06
    19d6:	8d 83       	std	Y+5, r24	; 0x05
    19d8:	0f c0       	rjmp	.+30     	; 0x19f8 <HSSD_voidDisplayNumberAscending+0x138>
    19da:	88 ec       	ldi	r24, 0xC8	; 200
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	9c 83       	std	Y+4, r25	; 0x04
    19e0:	8b 83       	std	Y+3, r24	; 0x03
    19e2:	8b 81       	ldd	r24, Y+3	; 0x03
    19e4:	9c 81       	ldd	r25, Y+4	; 0x04
    19e6:	01 97       	sbiw	r24, 0x01	; 1
    19e8:	f1 f7       	brne	.-4      	; 0x19e6 <HSSD_voidDisplayNumberAscending+0x126>
    19ea:	9c 83       	std	Y+4, r25	; 0x04
    19ec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ee:	8d 81       	ldd	r24, Y+5	; 0x05
    19f0:	9e 81       	ldd	r25, Y+6	; 0x06
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	9e 83       	std	Y+6, r25	; 0x06
    19f6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19f8:	8d 81       	ldd	r24, Y+5	; 0x05
    19fa:	9e 81       	ldd	r25, Y+6	; 0x06
    19fc:	00 97       	sbiw	r24, 0x00	; 0
    19fe:	69 f7       	brne	.-38     	; 0x19da <HSSD_voidDisplayNumberAscending+0x11a>
    1a00:	14 c0       	rjmp	.+40     	; 0x1a2a <HSSD_voidDisplayNumberAscending+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a02:	6f 81       	ldd	r22, Y+7	; 0x07
    1a04:	78 85       	ldd	r23, Y+8	; 0x08
    1a06:	89 85       	ldd	r24, Y+9	; 0x09
    1a08:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	9e 83       	std	Y+6, r25	; 0x06
    1a14:	8d 83       	std	Y+5, r24	; 0x05
    1a16:	8d 81       	ldd	r24, Y+5	; 0x05
    1a18:	9e 81       	ldd	r25, Y+6	; 0x06
    1a1a:	9a 83       	std	Y+2, r25	; 0x02
    1a1c:	89 83       	std	Y+1, r24	; 0x01
    1a1e:	89 81       	ldd	r24, Y+1	; 0x01
    1a20:	9a 81       	ldd	r25, Y+2	; 0x02
    1a22:	01 97       	sbiw	r24, 0x01	; 1
    1a24:	f1 f7       	brne	.-4      	; 0x1a22 <HSSD_voidDisplayNumberAscending+0x162>
    1a26:	9a 83       	std	Y+2, r25	; 0x02
    1a28:	89 83       	std	Y+1, r24	; 0x01
}

void HSSD_voidDisplayNumberAscending(DIO_PORT_e A_portID , u16 A_u16TimeToWait)
{
	u8 SSD_arr[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
	for(u8 i=0; i<=9;i++)
    1a2a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a2c:	8f 5f       	subi	r24, 0xFF	; 255
    1a2e:	8f 87       	std	Y+15, r24	; 0x0f
    1a30:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a32:	8a 30       	cpi	r24, 0x0A	; 10
    1a34:	08 f4       	brcc	.+2      	; 0x1a38 <HSSD_voidDisplayNumberAscending+0x178>
    1a36:	73 cf       	rjmp	.-282    	; 0x191e <HSSD_voidDisplayNumberAscending+0x5e>
	{
//		MDIO_voidSetPortDirection(A_portID,~(SSD_arr[i]));
		MDIO_voidSetPortValue(A_portID,(SSD_arr[i]));
		_delay_ms(A_u16TimeToWait);
	}
}
    1a38:	a1 96       	adiw	r28, 0x21	; 33
    1a3a:	0f b6       	in	r0, 0x3f	; 63
    1a3c:	f8 94       	cli
    1a3e:	de bf       	out	0x3e, r29	; 62
    1a40:	0f be       	out	0x3f, r0	; 63
    1a42:	cd bf       	out	0x3d, r28	; 61
    1a44:	cf 91       	pop	r28
    1a46:	df 91       	pop	r29
    1a48:	08 95       	ret

00001a4a <HSSD_voidDisplayNumberDescending>:

void HSSD_voidDisplayNumberDescending (DIO_PORT_e A_portID , u16 A_u16TimeToWait)
{
    1a4a:	df 93       	push	r29
    1a4c:	cf 93       	push	r28
    1a4e:	cd b7       	in	r28, 0x3d	; 61
    1a50:	de b7       	in	r29, 0x3e	; 62
    1a52:	a1 97       	sbiw	r28, 0x21	; 33
    1a54:	0f b6       	in	r0, 0x3f	; 63
    1a56:	f8 94       	cli
    1a58:	de bf       	out	0x3e, r29	; 62
    1a5a:	0f be       	out	0x3f, r0	; 63
    1a5c:	cd bf       	out	0x3d, r28	; 61
    1a5e:	8a 8f       	std	Y+26, r24	; 0x1a
    1a60:	7c 8f       	std	Y+28, r23	; 0x1c
    1a62:	6b 8f       	std	Y+27, r22	; 0x1b
	u8 SSD_arr[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    1a64:	ce 01       	movw	r24, r28
    1a66:	40 96       	adiw	r24, 0x10	; 16
    1a68:	9e 8f       	std	Y+30, r25	; 0x1e
    1a6a:	8d 8f       	std	Y+29, r24	; 0x1d
    1a6c:	ef e7       	ldi	r30, 0x7F	; 127
    1a6e:	f1 e0       	ldi	r31, 0x01	; 1
    1a70:	f8 a3       	std	Y+32, r31	; 0x20
    1a72:	ef 8f       	std	Y+31, r30	; 0x1f
    1a74:	fa e0       	ldi	r31, 0x0A	; 10
    1a76:	f9 a3       	std	Y+33, r31	; 0x21
    1a78:	ef 8d       	ldd	r30, Y+31	; 0x1f
    1a7a:	f8 a1       	ldd	r31, Y+32	; 0x20
    1a7c:	00 80       	ld	r0, Z
    1a7e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a80:	98 a1       	ldd	r25, Y+32	; 0x20
    1a82:	01 96       	adiw	r24, 0x01	; 1
    1a84:	98 a3       	std	Y+32, r25	; 0x20
    1a86:	8f 8f       	std	Y+31, r24	; 0x1f
    1a88:	ed 8d       	ldd	r30, Y+29	; 0x1d
    1a8a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    1a8c:	00 82       	st	Z, r0
    1a8e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a90:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a92:	01 96       	adiw	r24, 0x01	; 1
    1a94:	9e 8f       	std	Y+30, r25	; 0x1e
    1a96:	8d 8f       	std	Y+29, r24	; 0x1d
    1a98:	99 a1       	ldd	r25, Y+33	; 0x21
    1a9a:	91 50       	subi	r25, 0x01	; 1
    1a9c:	99 a3       	std	Y+33, r25	; 0x21
    1a9e:	e9 a1       	ldd	r30, Y+33	; 0x21
    1aa0:	ee 23       	and	r30, r30
    1aa2:	51 f7       	brne	.-44     	; 0x1a78 <HSSD_voidDisplayNumberDescending+0x2e>
	for(u8 i=9; i>=0;i--)
    1aa4:	89 e0       	ldi	r24, 0x09	; 9
    1aa6:	8f 87       	std	Y+15, r24	; 0x0f
	{
//		MDIO_voidSetPortDirection(A_portID,~(SSD_arr[i]));
		MDIO_voidSetPortValue(A_portID,(SSD_arr[i]));
    1aa8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1aaa:	28 2f       	mov	r18, r24
    1aac:	30 e0       	ldi	r19, 0x00	; 0
    1aae:	ce 01       	movw	r24, r28
    1ab0:	40 96       	adiw	r24, 0x10	; 16
    1ab2:	fc 01       	movw	r30, r24
    1ab4:	e2 0f       	add	r30, r18
    1ab6:	f3 1f       	adc	r31, r19
    1ab8:	90 81       	ld	r25, Z
    1aba:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1abc:	69 2f       	mov	r22, r25
    1abe:	0e 94 87 0b 	call	0x170e	; 0x170e <MDIO_voidSetPortValue>
		_delay_ms(A_u16TimeToWait);
    1ac2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ac4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ac6:	cc 01       	movw	r24, r24
    1ac8:	a0 e0       	ldi	r26, 0x00	; 0
    1aca:	b0 e0       	ldi	r27, 0x00	; 0
    1acc:	bc 01       	movw	r22, r24
    1ace:	cd 01       	movw	r24, r26
    1ad0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    1ad4:	dc 01       	movw	r26, r24
    1ad6:	cb 01       	movw	r24, r22
    1ad8:	8b 87       	std	Y+11, r24	; 0x0b
    1ada:	9c 87       	std	Y+12, r25	; 0x0c
    1adc:	ad 87       	std	Y+13, r26	; 0x0d
    1ade:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ae0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ae2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ae4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ae6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	4a ef       	ldi	r20, 0xFA	; 250
    1aee:	54 e4       	ldi	r21, 0x44	; 68
    1af0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1af4:	dc 01       	movw	r26, r24
    1af6:	cb 01       	movw	r24, r22
    1af8:	8f 83       	std	Y+7, r24	; 0x07
    1afa:	98 87       	std	Y+8, r25	; 0x08
    1afc:	a9 87       	std	Y+9, r26	; 0x09
    1afe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b00:	6f 81       	ldd	r22, Y+7	; 0x07
    1b02:	78 85       	ldd	r23, Y+8	; 0x08
    1b04:	89 85       	ldd	r24, Y+9	; 0x09
    1b06:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	40 e8       	ldi	r20, 0x80	; 128
    1b0e:	5f e3       	ldi	r21, 0x3F	; 63
    1b10:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b14:	88 23       	and	r24, r24
    1b16:	2c f4       	brge	.+10     	; 0x1b22 <HSSD_voidDisplayNumberDescending+0xd8>
		__ticks = 1;
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	9e 83       	std	Y+6, r25	; 0x06
    1b1e:	8d 83       	std	Y+5, r24	; 0x05
    1b20:	3f c0       	rjmp	.+126    	; 0x1ba0 <HSSD_voidDisplayNumberDescending+0x156>
	else if (__tmp > 65535)
    1b22:	6f 81       	ldd	r22, Y+7	; 0x07
    1b24:	78 85       	ldd	r23, Y+8	; 0x08
    1b26:	89 85       	ldd	r24, Y+9	; 0x09
    1b28:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b2a:	20 e0       	ldi	r18, 0x00	; 0
    1b2c:	3f ef       	ldi	r19, 0xFF	; 255
    1b2e:	4f e7       	ldi	r20, 0x7F	; 127
    1b30:	57 e4       	ldi	r21, 0x47	; 71
    1b32:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b36:	18 16       	cp	r1, r24
    1b38:	4c f5       	brge	.+82     	; 0x1b8c <HSSD_voidDisplayNumberDescending+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b3a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b3c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b3e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b40:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b42:	20 e0       	ldi	r18, 0x00	; 0
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	40 e2       	ldi	r20, 0x20	; 32
    1b48:	51 e4       	ldi	r21, 0x41	; 65
    1b4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b4e:	dc 01       	movw	r26, r24
    1b50:	cb 01       	movw	r24, r22
    1b52:	bc 01       	movw	r22, r24
    1b54:	cd 01       	movw	r24, r26
    1b56:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b5a:	dc 01       	movw	r26, r24
    1b5c:	cb 01       	movw	r24, r22
    1b5e:	9e 83       	std	Y+6, r25	; 0x06
    1b60:	8d 83       	std	Y+5, r24	; 0x05
    1b62:	0f c0       	rjmp	.+30     	; 0x1b82 <HSSD_voidDisplayNumberDescending+0x138>
    1b64:	88 ec       	ldi	r24, 0xC8	; 200
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	9c 83       	std	Y+4, r25	; 0x04
    1b6a:	8b 83       	std	Y+3, r24	; 0x03
    1b6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b70:	01 97       	sbiw	r24, 0x01	; 1
    1b72:	f1 f7       	brne	.-4      	; 0x1b70 <HSSD_voidDisplayNumberDescending+0x126>
    1b74:	9c 83       	std	Y+4, r25	; 0x04
    1b76:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b78:	8d 81       	ldd	r24, Y+5	; 0x05
    1b7a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b7c:	01 97       	sbiw	r24, 0x01	; 1
    1b7e:	9e 83       	std	Y+6, r25	; 0x06
    1b80:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b82:	8d 81       	ldd	r24, Y+5	; 0x05
    1b84:	9e 81       	ldd	r25, Y+6	; 0x06
    1b86:	00 97       	sbiw	r24, 0x00	; 0
    1b88:	69 f7       	brne	.-38     	; 0x1b64 <HSSD_voidDisplayNumberDescending+0x11a>
    1b8a:	14 c0       	rjmp	.+40     	; 0x1bb4 <HSSD_voidDisplayNumberDescending+0x16a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b8c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b8e:	78 85       	ldd	r23, Y+8	; 0x08
    1b90:	89 85       	ldd	r24, Y+9	; 0x09
    1b92:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b98:	dc 01       	movw	r26, r24
    1b9a:	cb 01       	movw	r24, r22
    1b9c:	9e 83       	std	Y+6, r25	; 0x06
    1b9e:	8d 83       	std	Y+5, r24	; 0x05
    1ba0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ba4:	9a 83       	std	Y+2, r25	; 0x02
    1ba6:	89 83       	std	Y+1, r24	; 0x01
    1ba8:	89 81       	ldd	r24, Y+1	; 0x01
    1baa:	9a 81       	ldd	r25, Y+2	; 0x02
    1bac:	01 97       	sbiw	r24, 0x01	; 1
    1bae:	f1 f7       	brne	.-4      	; 0x1bac <HSSD_voidDisplayNumberDescending+0x162>
    1bb0:	9a 83       	std	Y+2, r25	; 0x02
    1bb2:	89 83       	std	Y+1, r24	; 0x01
}

void HSSD_voidDisplayNumberDescending (DIO_PORT_e A_portID , u16 A_u16TimeToWait)
{
	u8 SSD_arr[10]={ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
	for(u8 i=9; i>=0;i--)
    1bb4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bb6:	81 50       	subi	r24, 0x01	; 1
    1bb8:	8f 87       	std	Y+15, r24	; 0x0f
    1bba:	76 cf       	rjmp	.-276    	; 0x1aa8 <HSSD_voidDisplayNumberDescending+0x5e>

00001bbc <__prologue_saves__>:
    1bbc:	2f 92       	push	r2
    1bbe:	3f 92       	push	r3
    1bc0:	4f 92       	push	r4
    1bc2:	5f 92       	push	r5
    1bc4:	6f 92       	push	r6
    1bc6:	7f 92       	push	r7
    1bc8:	8f 92       	push	r8
    1bca:	9f 92       	push	r9
    1bcc:	af 92       	push	r10
    1bce:	bf 92       	push	r11
    1bd0:	cf 92       	push	r12
    1bd2:	df 92       	push	r13
    1bd4:	ef 92       	push	r14
    1bd6:	ff 92       	push	r15
    1bd8:	0f 93       	push	r16
    1bda:	1f 93       	push	r17
    1bdc:	cf 93       	push	r28
    1bde:	df 93       	push	r29
    1be0:	cd b7       	in	r28, 0x3d	; 61
    1be2:	de b7       	in	r29, 0x3e	; 62
    1be4:	ca 1b       	sub	r28, r26
    1be6:	db 0b       	sbc	r29, r27
    1be8:	0f b6       	in	r0, 0x3f	; 63
    1bea:	f8 94       	cli
    1bec:	de bf       	out	0x3e, r29	; 62
    1bee:	0f be       	out	0x3f, r0	; 63
    1bf0:	cd bf       	out	0x3d, r28	; 61
    1bf2:	09 94       	ijmp

00001bf4 <__epilogue_restores__>:
    1bf4:	2a 88       	ldd	r2, Y+18	; 0x12
    1bf6:	39 88       	ldd	r3, Y+17	; 0x11
    1bf8:	48 88       	ldd	r4, Y+16	; 0x10
    1bfa:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bfc:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bfe:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c00:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c02:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c04:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c06:	b9 84       	ldd	r11, Y+9	; 0x09
    1c08:	c8 84       	ldd	r12, Y+8	; 0x08
    1c0a:	df 80       	ldd	r13, Y+7	; 0x07
    1c0c:	ee 80       	ldd	r14, Y+6	; 0x06
    1c0e:	fd 80       	ldd	r15, Y+5	; 0x05
    1c10:	0c 81       	ldd	r16, Y+4	; 0x04
    1c12:	1b 81       	ldd	r17, Y+3	; 0x03
    1c14:	aa 81       	ldd	r26, Y+2	; 0x02
    1c16:	b9 81       	ldd	r27, Y+1	; 0x01
    1c18:	ce 0f       	add	r28, r30
    1c1a:	d1 1d       	adc	r29, r1
    1c1c:	0f b6       	in	r0, 0x3f	; 63
    1c1e:	f8 94       	cli
    1c20:	de bf       	out	0x3e, r29	; 62
    1c22:	0f be       	out	0x3f, r0	; 63
    1c24:	cd bf       	out	0x3d, r28	; 61
    1c26:	ed 01       	movw	r28, r26
    1c28:	08 95       	ret

00001c2a <_exit>:
    1c2a:	f8 94       	cli

00001c2c <__stop_program>:
    1c2c:	ff cf       	rjmp	.-2      	; 0x1c2c <__stop_program>
